// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // BorrowerAccountBinder
    
    public partial class BorrowerAccountBinderMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<BorrowerAccountBinder>
    {
        public void Configure(EntityTypeBuilder<BorrowerAccountBinder> builder)
        {
            builder.ToTable("BorrowerAccountBinder", "dbo");
            builder.HasKey(x => new { x.BorrowerAccountId, x.BorrowerId });

            builder.Property(x => x.BorrowerAccountId).HasColumnName(@"BorrowerAccountId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.BorrowerId).HasColumnName(@"BorrowerId").HasColumnType("int").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.Borrower).WithMany(b => b.BorrowerAccountBinders).HasForeignKey(c => c.BorrowerId).OnDelete(DeleteBehavior.SetNull); // FK_BorrowerAccountBinder_Borrower
            builder.HasOne(a => a.BorrowerAccount).WithMany(b => b.BorrowerAccountBinders).HasForeignKey(c => c.BorrowerAccountId).OnDelete(DeleteBehavior.SetNull); // FK_BorrowerAccountBinder_BorrowerAccount
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
