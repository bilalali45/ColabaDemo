// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // ConferenceLogs
    
    public partial class Vortex_ConferenceLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Vortex_ConferenceLog>
    {
        public void Configure(EntityTypeBuilder<Vortex_ConferenceLog> builder)
        {
            builder.ToTable("ConferenceLogs", "Vortex");
            builder.HasKey(x => x.Sid);

            builder.Property(x => x.Status).HasColumnName(@"status").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.DateUpdated).HasColumnName(@"date_updated").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Region).HasColumnName(@"region").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.FriendlyName).HasColumnName(@"friendly_name").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Uri).HasColumnName(@"uri").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AccountSid).HasColumnName(@"account_sid").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Sid).HasColumnName(@"sid").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.DateCreated).HasColumnName(@"date_created").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ApiVersion).HasColumnName(@"api_version").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SubresourceUris).HasColumnName(@"subresource_uris").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Recordings).HasColumnName(@"recordings").HasColumnType("nvarchar(max)").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
