// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // CallLog
    
    public partial class Vortex_CallLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Vortex_CallLog>
    {
        public void Configure(EntityTypeBuilder<Vortex_CallLog> builder)
        {
            builder.ToTable("CallLog", "Vortex");
            builder.HasKey(x => x.Sid);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Sid).HasColumnName(@"Sid").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.DateCreatedUtc).HasColumnName(@"DateCreatedUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.DateUpdatedUtc).HasColumnName(@"DateUpdatedUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.ParentCallSid).HasColumnName(@"ParentCallSid").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.AccountSid).HasColumnName(@"AccountSid").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.To).HasColumnName(@"To").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ToFormatted).HasColumnName(@"ToFormatted").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.From).HasColumnName(@"From").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.FromFormatted).HasColumnName(@"FromFormatted").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.PhoneNumberSid).HasColumnName(@"PhoneNumberSid").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.StartTimeUtc).HasColumnName(@"StartTimeUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.EndTimeUtc).HasColumnName(@"EndTimeUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.Duration).HasColumnName(@"Duration").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("decimal(9,5)").IsRequired(false);
            builder.Property(x => x.PriceUnit).HasColumnName(@"PriceUnit").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.Direction).HasColumnName(@"Direction").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.AnsweredBy).HasColumnName(@"AnsweredBy").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Annotation).HasColumnName(@"Annotation").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ApiVersion).HasColumnName(@"ApiVersion").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            builder.Property(x => x.ForwardedFrom).HasColumnName(@"ForwardedFrom").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.GroupSid).HasColumnName(@"GroupSid").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CallerName).HasColumnName(@"CallerName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Uri).HasColumnName(@"Uri").HasColumnType("nvarchar").IsRequired().HasMaxLength(2048);
            builder.Property(x => x.SubresourceUrisNotifications).HasColumnName(@"SubresourceUrisNotifications").HasColumnType("nvarchar").IsRequired().HasMaxLength(2048);
            builder.Property(x => x.SubresourceUrisRecordings).HasColumnName(@"SubresourceUrisRecordings").HasColumnType("nvarchar").IsRequired().HasMaxLength(2048);

            // Foreign keys
            builder.HasOne(a => a.ParentCallS).WithMany(b => b.Vortex_CallLogs).HasForeignKey(c => c.ParentCallSid).OnDelete(DeleteBehavior.SetNull); // FK_CallLog_CallLog
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
