// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // TwilioErrorCodes
    
    public partial class Vortex_TwilioErrorCodeMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Vortex_TwilioErrorCode>
    {
        public void Configure(EntityTypeBuilder<Vortex_TwilioErrorCode> builder)
        {
            builder.ToTable("TwilioErrorCodes", "Vortex");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"id").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.Causes).HasColumnName(@"causes").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Code).HasColumnName(@"code").HasColumnType("int").IsRequired();
            builder.Property(x => x.ConstPartition).HasColumnName(@"const_partition").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.DateCreated).HasColumnName(@"date_created").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"description").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Docs).HasColumnName(@"docs").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LastUpdated).HasColumnName(@"last_updated").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.LogLevel).HasColumnName(@"log_level").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.LogType).HasColumnName(@"log_type").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Message).HasColumnName(@"message").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.Product).HasColumnName(@"product").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SecondaryMessage).HasColumnName(@"secondary_message").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Solutions).HasColumnName(@"solutions").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CustomMessage).HasColumnName(@"custom_message").HasColumnType("nvarchar(max)").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
