// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // UserProfile
    
    public partial class UserProfileMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<UserProfile>
    {
        public void Configure(EntityTypeBuilder<UserProfile> builder)
        {
            builder.ToTable("UserProfile", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            builder.Property(x => x.LoweredUserName).HasColumnName(@"LoweredUserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            builder.Property(x => x.MobileAlias).HasColumnName(@"MobileAlias").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsAnonymous).HasColumnName(@"IsAnonymous").HasColumnType("bit").IsRequired();
            builder.Property(x => x.LastActivityDateUtc).HasColumnName(@"LastActivityDateUtc").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystem).HasColumnName(@"IsSystem").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.TpId).HasColumnName(@"TpId").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PasswordFormatId).HasColumnName(@"PasswordFormatId").HasColumnType("int").IsRequired();
            builder.Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EntityRefTypeId).HasColumnName(@"EntityRefTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EntityRefId).HasColumnName(@"EntityRefId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystemAdmin).HasColumnName(@"IsSystemAdmin").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsLoggedIn).HasColumnName(@"IsLoggedIn").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.LastIpAddress).HasColumnName(@"LastIpAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.LastLoginOnUtc).HasColumnName(@"LastLoginOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastLogoutOnUtc).HasColumnName(@"LastLogoutOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.BusinessUnitId).HasColumnName(@"BusinessUnitId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FailedPasswordAttemptCount).HasColumnName(@"FailedPasswordAttemptCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsLockedOut).HasColumnName(@"IsLockedOut").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.LastLockedOutDateUtc).HasColumnName(@"LastLockedOutDateUtc").HasColumnType("datetime").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
