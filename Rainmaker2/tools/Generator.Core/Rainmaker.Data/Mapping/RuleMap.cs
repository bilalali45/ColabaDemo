// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // Rule
    
    public partial class RuleMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Rule>
    {
        public void Configure(EntityTypeBuilder<Rule> builder)
        {
            builder.ToTable("Rule", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.RuleTypeId).HasColumnName(@"RuleTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LoanPurposes).HasColumnName(@"LoanPurposes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PropertyUsages).HasColumnName(@"PropertyUsages").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PropertyTypes).HasColumnName(@"PropertyTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CreditScoreMin).HasColumnName(@"CreditScoreMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreditScoreMax).HasColumnName(@"CreditScoreMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LockDaysMin).HasColumnName(@"LockDaysMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LockDaysMax).HasColumnName(@"LockDaysMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.States).HasColumnName(@"States").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Counties).HasColumnName(@"Counties").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ZipCode).HasColumnName(@"ZipCode").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.City).HasColumnName(@"City").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.GeoStates).HasColumnName(@"GeoStates").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Regions).HasColumnName(@"Regions").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Products).HasColumnName(@"Products").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Investors).HasColumnName(@"Investors").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SubOrdination).HasColumnName(@"SubOrdination").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PropertyValueMin).HasColumnName(@"PropertyValueMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PropertyValueMax).HasColumnName(@"PropertyValueMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LoanAmountMin).HasColumnName(@"LoanAmountMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LoanAmountMax).HasColumnName(@"LoanAmountMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LtvMin).HasColumnName(@"LtvMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.LtvMax).HasColumnName(@"LtvMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.CltvMin).HasColumnName(@"CltvMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.CltvMax).HasColumnName(@"CltvMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.HltvMin).HasColumnName(@"HltvMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.HltvMax).HasColumnName(@"HltvMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.CashOutAmountMin).HasColumnName(@"CashOutAmountMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CashOutAmountMax).HasColumnName(@"CashOutAmountMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FirstMortgageBalanceMin).HasColumnName(@"FirstMortgageBalanceMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FirstMortgageBalanceMax).HasColumnName(@"FirstMortgageBalanceMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TotalJuniorLienMin).HasColumnName(@"TotalJuniorLienMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TotalJuniorLienMax).HasColumnName(@"TotalJuniorLienMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MortgageToBePaidMin).HasColumnName(@"MortgageToBePaidMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MortgageToBePaidMax).HasColumnName(@"MortgageToBePaidMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MortgageToBeSubordinateMin).HasColumnName(@"MortgageToBeSubordinateMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MortgageToBeSubordinateMax).HasColumnName(@"MortgageToBeSubordinateMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DtiHousingMin).HasColumnName(@"DtiHousingMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.DtiHousingMax).HasColumnName(@"DtiHousingMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.DtiTotalMin).HasColumnName(@"DtiTotalMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.DtiTotalMax).HasColumnName(@"DtiTotalMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.IsNewlyBuiltHome).HasColumnName(@"IsNewlyBuiltHome").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.EscrowWaiver).HasColumnName(@"EscrowWaiver").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ResidencyTypes).HasColumnName(@"ResidencyTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.RentalPropertiesMin).HasColumnName(@"RentalPropertiesMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RentalPropertiesMax).HasColumnName(@"RentalPropertiesMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocTypes).HasColumnName(@"DocTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Statuses).HasColumnName(@"Statuses").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.StatusTypes).HasColumnName(@"StatusTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.StatusCategories).HasColumnName(@"StatusCategories").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LockStatuses).HasColumnName(@"LockStatuses").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LockStatusTypes).HasColumnName(@"LockStatusTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.IsAutoAssigned).HasColumnName(@"IsAutoAssigned").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsPicked).HasColumnName(@"IsPicked").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsEligible).HasColumnName(@"IsEligible").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsValid).HasColumnName(@"IsValid").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.LeadSources).HasColumnName(@"LeadSources").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LeadSourceTypes).HasColumnName(@"LeadSourceTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LeadCreatedFrom).HasColumnName(@"LeadCreatedFrom").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LeadCreatedDateUtcFrom).HasColumnName(@"LeadCreatedDateUtcFrom").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LeadCreatedDateUtcTo).HasColumnName(@"LeadCreatedDateUtcTo").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Causes).HasColumnName(@"Causes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Owners).HasColumnName(@"Owners").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Teams).HasColumnName(@"Teams").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Opportunities).HasColumnName(@"Opportunities").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystem).HasColumnName(@"IsSystem").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.StartDateUtc).HasColumnName(@"StartDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDateUtc).HasColumnName(@"EndDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.TpId).HasColumnName(@"TpId").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.XmlRule).HasColumnName(@"XmlRule").HasColumnType("xml").IsRequired(false);
            builder.Property(x => x.QueryFilter).HasColumnName(@"QueryFilter").HasColumnType("ntext").IsRequired(false);
            builder.Property(x => x.QueryViewName).HasColumnName(@"QueryViewName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.SecondLienBalanceMin).HasColumnName(@"SecondLienBalanceMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SecondLienBalanceMax).HasColumnName(@"SecondLienBalanceMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdSources).HasColumnName(@"AdSources").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Branches).HasColumnName(@"Branches").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.BusinessUnits).HasColumnName(@"BusinessUnits").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductLoanTypes).HasColumnName(@"ProductLoanTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductQualifiers).HasColumnName(@"ProductQualifiers").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AusProcessingTypes).HasColumnName(@"AusProcessingTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AmortizationTypes).HasColumnName(@"AmortizationTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Agencies).HasColumnName(@"Agencies").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.RateMin).HasColumnName(@"RateMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.RateMax).HasColumnName(@"RateMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.PriceMin).HasColumnName(@"PriceMin").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.PriceMax).HasColumnName(@"PriceMax").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.LoanGoals).HasColumnName(@"LoanGoals").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LeadTypes).HasColumnName(@"LeadTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.OpportunityStatusDateOffset).HasColumnName(@"OpportunityStatusDateOffset").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LastSearchDateOffset).HasColumnName(@"LastSearchDateOffset").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedDateOffset).HasColumnName(@"CreatedDateOffset").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductTypes).HasColumnName(@"ProductTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductFamilies).HasColumnName(@"ProductFamilies").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductClasses).HasColumnName(@"ProductClasses").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PrepayPenalties).HasColumnName(@"PrepayPenalties").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductBestExs).HasColumnName(@"ProductBestExs").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LoanIndexTypes).HasColumnName(@"LoanIndexTypes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.QuestionsBoolYes).HasColumnName(@"QuestionsBoolYes").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.QuestionsBoolNo).HasColumnName(@"QuestionsBoolNo").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.IsPickedHighestBenchmarkRate).HasColumnName(@"IsPickedHighestBenchmarkRate").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsEmployeeLoggedIn).HasColumnName(@"IsEmployeeLoggedIn").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsDesireRateSelected).HasColumnName(@"IsDesireRateSelected").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.OpportunityCreatedDateUtcFrom).HasColumnName(@"OpportunityCreatedDateUtcFrom").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OpportunityCreatedDateUtcTo).HasColumnName(@"OpportunityCreatedDateUtcTo").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ClosingDateOffset).HasColumnName(@"ClosingDateOffset").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadGroups).HasColumnName(@"LeadGroups").HasColumnType("nvarchar(max)").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
