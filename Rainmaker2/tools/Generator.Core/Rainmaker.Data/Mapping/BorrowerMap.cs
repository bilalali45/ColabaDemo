// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // Borrower
    
    public partial class BorrowerMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Borrower>
    {
        public void Configure(EntityTypeBuilder<Borrower> builder)
        {
            builder.ToTable("Borrower", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.LoanContactId).HasColumnName(@"LoanContactId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LoanApplicationId).HasColumnName(@"LoanApplicationId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RelationWithPrimaryId).HasColumnName(@"RelationWithPrimaryId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreditScoreNo).HasColumnName(@"CreditScoreNo").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.DependentAge).HasColumnName(@"DependentAge").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.NoOfDependent).HasColumnName(@"NoOfDependent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OwnTypeId).HasColumnName(@"OwnTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsVaEligible).HasColumnName(@"IsVaEligible").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.AdditionalInformation).HasColumnName(@"AdditionalInformation").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);

            // Foreign keys
            builder.HasOne(a => a.FamilyRelationType).WithMany(b => b.Borrowers).HasForeignKey(c => c.RelationWithPrimaryId).OnDelete(DeleteBehavior.SetNull); // FK_Borrower_FamilyRelationType
            builder.HasOne(a => a.LoanApplication).WithMany(b => b.Borrowers).HasForeignKey(c => c.LoanApplicationId).OnDelete(DeleteBehavior.SetNull); // FK_Borrower_LoanApplication
            builder.HasOne(a => a.LoanContact).WithMany(b => b.Borrowers).HasForeignKey(c => c.LoanContactId).OnDelete(DeleteBehavior.SetNull); // FK_Borrower_LoanContact
            builder.HasOne(a => a.OwnType).WithMany(b => b.Borrowers).HasForeignKey(c => c.OwnTypeId).OnDelete(DeleteBehavior.SetNull); // FK_Borrower_OwnType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
