// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // Sitemap
    
    public partial class SitemapMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Sitemap>
    {
        public void Configure(EntityTypeBuilder<Sitemap> builder)
        {
            builder.ToTable("Sitemap", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.UserPermissionId).HasColumnName(@"UserPermissionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Url).HasColumnName(@"Url").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1500);
            builder.Property(x => x.IsParent).HasColumnName(@"IsParent").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsExecutable).HasColumnName(@"IsExecutable").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IconClass).HasColumnName(@"IconClass").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsPermissive).HasColumnName(@"IsPermissive").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Parent).WithMany(b => b.Sitemaps).HasForeignKey(c => c.ParentId).OnDelete(DeleteBehavior.SetNull); // FK_Sitemap_Sitemap
            builder.HasOne(a => a.UserPermission).WithMany(b => b.Sitemaps).HasForeignKey(c => c.UserPermissionId).OnDelete(DeleteBehavior.SetNull); // FK_Sitemap_UserPermission
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
