// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // vEmployeePhoneInfo
    
    public partial class VEmployeePhoneInfoMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<VEmployeePhoneInfo>
    {
        public void Configure(EntityTypeBuilder<VEmployeePhoneInfo> builder)
        {
            builder.ToTable("vEmployeePhoneInfo", "dbo");
            builder.HasKey(x => new { x.UserName, x.EmployeeId, x.TypeId });

            builder.Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256).ValueGeneratedNever();
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.TypeId).HasColumnName(@"TypeId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
