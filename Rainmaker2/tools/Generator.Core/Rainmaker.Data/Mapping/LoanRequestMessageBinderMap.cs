// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // LoanRequestMessageBinder
    
    public partial class LoanRequestMessageBinderMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<LoanRequestMessageBinder>
    {
        public void Configure(EntityTypeBuilder<LoanRequestMessageBinder> builder)
        {
            builder.ToTable("LoanRequestMessageBinder", "dbo");
            builder.HasKey(x => new { x.LoanRequestId, x.MessageOnRuleId });

            builder.Property(x => x.LoanRequestId).HasColumnName(@"LoanRequestId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.MessageOnRuleId).HasColumnName(@"MessageOnRuleId").HasColumnType("int").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.LoanRequest).WithMany(b => b.LoanRequestMessageBinders).HasForeignKey(c => c.LoanRequestId).OnDelete(DeleteBehavior.SetNull); // FK_LoanRequestMessageBinder_LoanRequest
            builder.HasOne(a => a.MessageOnRule).WithMany(b => b.LoanRequestMessageBinders).HasForeignKey(c => c.MessageOnRuleId).OnDelete(DeleteBehavior.SetNull); // FK_LoanRequestMessageBinder_MessageOnRule
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
