// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // EmailTracking
    
    public partial class EmailTrackingMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<EmailTracking>
    {
        public void Configure(EntityTypeBuilder<EmailTracking> builder)
        {
            builder.ToTable("EmailTracking", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.EmailLogId).HasColumnName(@"EmailLogId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AttachmentId).HasColumnName(@"AttachmentId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrackingType).HasColumnName(@"TrackingType").HasColumnType("int").IsRequired();
            builder.Property(x => x.EmailLinkTrackingId).HasColumnName(@"EmailLinkTrackingId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LinkPosition).HasColumnName(@"LinkPosition").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Recipient).HasColumnName(@"Recipient").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Reason).HasColumnName(@"Reason").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.DateTimeUtc).HasColumnName(@"DateTimeUtc").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.RefferUrl).HasColumnName(@"RefferUrl").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.EmailLinkTracking).WithMany(b => b.EmailTrackings).HasForeignKey(c => c.EmailLinkTrackingId).OnDelete(DeleteBehavior.SetNull); // FK_EmailTracking_EmailLinkTracking
            builder.HasOne(a => a.EmailLog).WithMany(b => b.EmailTrackings).HasForeignKey(c => c.EmailLogId).OnDelete(DeleteBehavior.SetNull); // FK_EmailTracking_EmailLog
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
