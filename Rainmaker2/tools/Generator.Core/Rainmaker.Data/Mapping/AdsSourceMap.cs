// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // AdsSource
    
    public partial class AdsSourceMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<AdsSource>
    {
        public void Configure(EntityTypeBuilder<AdsSource> builder)
        {
            builder.ToTable("AdsSource", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.SourceNumber).HasColumnName(@"SourceNumber").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            builder.Property(x => x.StartDateUtc).HasColumnName(@"StartDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDateUtc).HasColumnName(@"EndDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsGeoTargeted).HasColumnName(@"IsGeoTargeted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsNationwide).HasColumnName(@"IsNationwide").HasColumnType("bit").IsRequired();
            builder.Property(x => x.LeadSourceTypeId).HasColumnName(@"LeadSourceTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadSourceId).HasColumnName(@"LeadSourceId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdsPromotionId).HasColumnName(@"AdsPromotionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdsSizeId).HasColumnName(@"AdsSizeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdsTypeId).HasColumnName(@"AdsTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdsPageLocationId).HasColumnName(@"AdsPageLocationId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdsCost).HasColumnName(@"AdsCost").HasColumnType("decimal(18,2)").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystem).HasColumnName(@"IsSystem").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.AdsPageLocation).WithMany(b => b.AdsSources).HasForeignKey(c => c.AdsPageLocationId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_AdsPageLocation
            builder.HasOne(a => a.AdsPromotion).WithMany(b => b.AdsSources).HasForeignKey(c => c.AdsPromotionId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_AdsPromotion
            builder.HasOne(a => a.AdsSize).WithMany(b => b.AdsSources).HasForeignKey(c => c.AdsSizeId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_AdsSize
            builder.HasOne(a => a.AdsType).WithMany(b => b.AdsSources).HasForeignKey(c => c.AdsTypeId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_AdsType
            builder.HasOne(a => a.LeadSource).WithMany(b => b.AdsSources).HasForeignKey(c => c.LeadSourceId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_LeadSource
            builder.HasOne(a => a.LeadSourceType).WithMany(b => b.AdsSources).HasForeignKey(c => c.LeadSourceTypeId).OnDelete(DeleteBehavior.SetNull); // FK_AdsSource_LeadSourceType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
