// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // CurrentRateView
    
    public partial class CurrentRateViewMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<CurrentRateView>
    {
        public void Configure(EntityTypeBuilder<CurrentRateView> builder)
        {
            builder.ToTable("CurrentRateView", "dbo");
            builder.HasKey(x => new { x.Id, x.RateParameterId, x.PrdouctName });

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RateTypeId).HasColumnName(@"RateTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PriceDateUtc).HasColumnName(@"PriceDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.Rate).HasColumnName(@"Rate").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.Apr).HasColumnName(@"Apr").HasColumnType("decimal(18,3)").IsRequired(false);
            builder.Property(x => x.BusinessUnitId).HasColumnName(@"BusinessUnitId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RateParameterId).HasColumnName(@"RateParameterId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.LeadSourceId).HasColumnName(@"LeadSourceId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PrdouctName).HasColumnName(@"PrdouctName").HasColumnType("nvarchar").IsRequired().HasMaxLength(150).ValueGeneratedNever();
            builder.Property(x => x.LoanTypeName).HasColumnName(@"LoanTypeName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.ProductFamilyName).HasColumnName(@"ProductFamilyName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.ProductAdRateTypeId).HasColumnName(@"ProductAdRateTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductFamilyId).HasColumnName(@"ProductFamilyId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MaxLoanAmount).HasColumnName(@"MaxLoanAmount").HasColumnType("decimal(18,0)").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PFamilyDisplayOrder).HasColumnName(@"PFamilyDisplayOrder").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductAliasName).HasColumnName(@"ProductAliasName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.ProductDescription).HasColumnName(@"ProductDescription").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.ProductDetail).HasColumnName(@"ProductDetail").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1000);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
