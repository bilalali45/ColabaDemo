// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data
{
    using Microsoft.EntityFrameworkCore;
    using RainMaker.Data.Mapping;
    using RainMaker.Entity.Models;


    
    public partial class RainMakerContext : DbContext
    {
        //public virtual DbSet<AccountType> AccountTypes { get; set; } // AccountType
        //public virtual DbSet<Acl> Acls { get; set; } // Acl
        //public virtual DbSet<Activity> Activities { get; set; } // Activity
        //public virtual DbSet<ActivitySubscriptionBinder> ActivitySubscriptionBinders { get; set; } // ActivitySubscriptionBinder
        //public virtual DbSet<ActivityType> ActivityTypes { get; set; } // ActivityType
        //public virtual DbSet<AddressInfo> AddressInfoes { get; set; } // AddressInfo
        //public virtual DbSet<Adjustment> Adjustments { get; set; } // Adjustment
        //public virtual DbSet<AdsGeoLocation> AdsGeoLocations { get; set; } // AdsGeoLocation
        //public virtual DbSet<AdsPageLocation> AdsPageLocations { get; set; } // AdsPageLocation
        //public virtual DbSet<AdsPromotion> AdsPromotions { get; set; } // AdsPromotion
        //public virtual DbSet<AdsSize> AdsSizes { get; set; } // AdsSize
        //public virtual DbSet<AdsSource> AdsSources { get; set; } // AdsSource
        //public virtual DbSet<AdsSourceMessage> AdsSourceMessages { get; set; } // AdsSourceMessage
        //public virtual DbSet<AdsType> AdsTypes { get; set; } // AdsType
        //public virtual DbSet<Agency> Agencies { get; set; } // Agency
        //public virtual DbSet<AssetBorrowerBinder> AssetBorrowerBinders { get; set; } // AssetBorrowerBinder
        //public virtual DbSet<AssetType> AssetTypes { get; set; } // AssetType
        //public virtual DbSet<AuditTrail> AuditTrails { get; set; } // AuditTrail
        //public virtual DbSet<AusProcessingType> AusProcessingTypes { get; set; } // AusProcessingType
        //public virtual DbSet<AuthApplicationKey> AuthApplicationKeys { get; set; } // AuthApplicationKey
        //public virtual DbSet<AuthProvider> AuthProviders { get; set; } // AuthProvider
        //public virtual DbSet<AuthToken> AuthTokens { get; set; } // AuthToken
        //public virtual DbSet<BankRateArchive> BankRateArchives { get; set; } // BankRateArchive
        //public virtual DbSet<BankRateCreditScoreBinder> BankRateCreditScoreBinders { get; set; } // BankRateCreditScoreBinder
        //public virtual DbSet<BankRateInstance> BankRateInstances { get; set; } // BankRateInstance
        //public virtual DbSet<BankRateLead> BankRateLeads { get; set; } // BankRateLead
        //public virtual DbSet<BankRateLoanToValueBinder> BankRateLoanToValueBinders { get; set; } // BankRateLoanToValueBinder
        //public virtual DbSet<BankRateParameter> BankRateParameters { get; set; } // BankRateParameter
        //public virtual DbSet<BankRatePoint> BankRatePoints { get; set; } // BankRatePoint
        //public virtual DbSet<BankRatePricingRequest> BankRatePricingRequests { get; set; } // BankRatePricingRequest
        //public virtual DbSet<BankRateProduct> BankRateProducts { get; set; } // BankRateProduct
        //public virtual DbSet<BankRatePropertyTypeBinder> BankRatePropertyTypeBinders { get; set; } // BankRatePropertyTypeBinder
        //public virtual DbSet<BankRatePropertyUsageBinder> BankRatePropertyUsageBinders { get; set; } // BankRatePropertyUsageBinder
        //public virtual DbSet<BankRateRequest> BankRateRequests { get; set; } // BankRateRequest
        //public virtual DbSet<BankRateServiceStage> BankRateServiceStages { get; set; } // BankRateServiceStage
        //public virtual DbSet<BankRateStage> BankRateStages { get; set; } // BankRateStage
        //public virtual DbSet<BankRateTier> BankRateTiers { get; set; } // BankRateTier
        //public virtual DbSet<BankRuptcy> BankRuptcies { get; set; } // BankRuptcy
        //public virtual DbSet<BenchMark> BenchMarks { get; set; } // BenchMark
        //public virtual DbSet<BenchMarkRate> BenchMarkRates { get; set; } // BenchMarkRate
        //public virtual DbSet<BlacklistIp> BlacklistIps { get; set; } // BlacklistIp
        //public virtual DbSet<Borrower> Borrowers { get; set; } // Borrower
        //public virtual DbSet<BorrowerAccount> BorrowerAccounts { get; set; } // BorrowerAccount
        //public virtual DbSet<BorrowerAccountBinder> BorrowerAccountBinders { get; set; } // BorrowerAccountBinder
        //public virtual DbSet<BorrowerAsset> BorrowerAssets { get; set; } // BorrowerAsset
        //public virtual DbSet<BorrowerBankRuptcy> BorrowerBankRuptcies { get; set; } // BorrowerBankRuptcy
        //public virtual DbSet<BorrowerConsent> BorrowerConsents { get; set; } // BorrowerConsent
        //public virtual DbSet<BorrowerConsentLog> BorrowerConsentLogs { get; set; } // BorrowerConsentLog
        //public virtual DbSet<BorrowerLiability> BorrowerLiabilities { get; set; } // BorrowerLiability
        //public virtual DbSet<BorrowerProperty> BorrowerProperties { get; set; } // BorrowerProperty
        //public virtual DbSet<BorrowerQuestionResponse> BorrowerQuestionResponses { get; set; } // BorrowerQuestionResponse
        //public virtual DbSet<BorrowerResidence> BorrowerResidences { get; set; } // BorrowerResidence
        //public virtual DbSet<BorrowerSupportPayment> BorrowerSupportPayments { get; set; } // BorrowerSupportPayment
        //public virtual DbSet<Branch> Branches { get; set; } // Branch
        //public virtual DbSet<BranchEmail> BranchEmails { get; set; } // BranchEmail
        //public virtual DbSet<BranchPhone> BranchPhones { get; set; } // BranchPhone
        //public virtual DbSet<BranchPhoneBinder> BranchPhoneBinders { get; set; } // BranchPhoneBinder
        //public virtual DbSet<BreachedPassword> BreachedPasswords { get; set; } // BreachedPassword
        //public virtual DbSet<BusinessUnit> BusinessUnits { get; set; } // BusinessUnit
        //public virtual DbSet<BusinessUnitEmail> BusinessUnitEmails { get; set; } // BusinessUnitEmail
        //public virtual DbSet<BusinessUnitPhone> BusinessUnitPhones { get; set; } // BusinessUnitPhone
        //public virtual DbSet<BusinessUnitPhoneBinder> BusinessUnitPhoneBinders { get; set; } // BusinessUnitPhoneBinder
        //public virtual DbSet<Campaign> Campaigns { get; set; } // Campaign
        //public virtual DbSet<CampaignActivityBinder> CampaignActivityBinders { get; set; } // CampaignActivityBinder
        //public virtual DbSet<CampaignQueue> CampaignQueues { get; set; } // CampaignQueue
        //public virtual DbSet<CampaignTrigger> CampaignTriggers { get; set; } // CampaignTrigger
        //public virtual DbSet<CampaignTriggerBinder> CampaignTriggerBinders { get; set; } // CampaignTriggerBinder
        //public virtual DbSet<City> Cities { get; set; } // City
        //public virtual DbSet<CmsPage> CmsPages { get; set; } // CmsPage
        //public virtual DbSet<CompanyPhoneInfo> CompanyPhoneInfoes { get; set; } // CompanyPhoneInfo
        //public virtual DbSet<ConsentType> ConsentTypes { get; set; } // ConsentType
        //public virtual DbSet<Contact> Contacts { get; set; } // Contact
        //public virtual DbSet<ContactAddress> ContactAddresses { get; set; } // ContactAddress
        //public virtual DbSet<ContactEmailInfo> ContactEmailInfoes { get; set; } // ContactEmailInfo
        //public virtual DbSet<ContactInfo> ContactInfoes { get; set; } // ContactInfo
        //public virtual DbSet<ContactPhoneInfo> ContactPhoneInfoes { get; set; } // ContactPhoneInfo
        //public virtual DbSet<ContactSearchView> ContactSearchViews { get; set; } // ContactSearchView
        //public virtual DbSet<Country> Countries { get; set; } // Country
        //public virtual DbSet<County> Counties { get; set; } // County
        //public virtual DbSet<CountyType> CountyTypes { get; set; } // CountyType
        //public virtual DbSet<CreditScore> CreditScores { get; set; } // CreditScore
        //public virtual DbSet<CurrentRate> CurrentRates { get; set; } // CurrentRate
        //public virtual DbSet<CurrentRateView> CurrentRateViews { get; set; } // CurrentRateView
        //public virtual DbSet<CusSubscriptionBinder> CusSubscriptionBinders { get; set; } // CusSubscriptionBinder
        //public virtual DbSet<Customer> Customers { get; set; } // Customer
        //public virtual DbSet<CustomerInfoView> CustomerInfoViews { get; set; } // CustomerInfoView
        //public virtual DbSet<CustomerType> CustomerTypes { get; set; } // CustomerType
        //public virtual DbSet<CustomerTypeBinder> CustomerTypeBinders { get; set; } // CustomerTypeBinder
        //public virtual DbSet<DebtToIncomeRatio> DebtToIncomeRatios { get; set; } // DebtToIncomeRatio
        //public virtual DbSet<DefaultLoanParameter> DefaultLoanParameters { get; set; } // DefaultLoanParameter
        //public virtual DbSet<DemographicMedium> DemographicMediums { get; set; } // DemographicMedium
        //public virtual DbSet<DenormOpportunityContact> DenormOpportunityContacts { get; set; } // DenormOpportunityContact
        //public virtual DbSet<Department> Departments { get; set; } // Department
        //public virtual DbSet<EducationFormat> EducationFormats { get; set; } // EducationFormat
        //public virtual DbSet<EmailAccount> EmailAccounts { get; set; } // EmailAccount
        //public virtual DbSet<EmailAttachmentsLog> EmailAttachmentsLogs { get; set; } // EmailAttachmentsLog
        //public virtual DbSet<EmailLinkTracking> EmailLinkTrackings { get; set; } // EmailLinkTracking
        //public virtual DbSet<EmailLog> EmailLogs { get; set; } // EmailLog
        //public virtual DbSet<EmailLogBinder> EmailLogBinders { get; set; } // EmailLogBinder
        //public virtual DbSet<EmailLogTrackingView> EmailLogTrackingViews { get; set; } // EmailLogTrackingView
        //public virtual DbSet<EmailTracking> EmailTrackings { get; set; } // EmailTracking
        //public virtual DbSet<EmailVerification> EmailVerifications { get; set; } // EmailVerification
        //public virtual DbSet<EmpAssignmentRuleBinder> EmpAssignmentRuleBinders { get; set; } // EmpAssignmentRuleBinder
        //public virtual DbSet<EmpDepartmentBinder> EmpDepartmentBinders { get; set; } // EmpDepartmentBinder
        //public virtual DbSet<Employee> Employees { get; set; } // Employee
        //public virtual DbSet<EmployeeBusinessUnitEmail> EmployeeBusinessUnitEmails { get; set; } // EmployeeBusinessUnitEmail
        //public virtual DbSet<EmployeeCsrLoBinder> EmployeeCsrLoBinders { get; set; } // EmployeeCsrLoBinder
        //public virtual DbSet<EmployeeLicense> EmployeeLicenses { get; set; } // EmployeeLicense
        //public virtual DbSet<EmployeePhoneBinder> EmployeePhoneBinders { get; set; } // EmployeePhoneBinder
        //public virtual DbSet<EmploymentInfo> EmploymentInfoes { get; set; } // EmploymentInfo
        //public virtual DbSet<EntityType> EntityTypes { get; set; } // EntityType
        //public virtual DbSet<EscrowEntityType> EscrowEntityTypes { get; set; } // EscrowEntityType
        //public virtual DbSet<Ethnicity> Ethnicities { get; set; } // Ethnicity
        //public virtual DbSet<EthnicityDetail> EthnicityDetails { get; set; } // EthnicityDetail
        //public virtual DbSet<FamilyRelationType> FamilyRelationTypes { get; set; } // FamilyRelationType
        //public virtual DbSet<Fee> Fees { get; set; } // Fee
        //public virtual DbSet<FeeBlock> FeeBlocks { get; set; } // FeeBlock
        //public virtual DbSet<FeeCategory> FeeCategories { get; set; } // FeeCategory
        //public virtual DbSet<FeeDetail> FeeDetails { get; set; } // FeeDetail
        //public virtual DbSet<FeeDetailPaidBy> FeeDetailPaidBies { get; set; } // FeeDetailPaidBy
        //public virtual DbSet<FeeType> FeeTypes { get; set; } // FeeType
        //public virtual DbSet<FileAttachment> FileAttachments { get; set; } // FileAttachment
        //public virtual DbSet<Five9LeadPosting> Five9LeadPosting { get; set; } // Five9LeadPosting
        //public virtual DbSet<Five9LeadPostingLog> Five9LeadPostingLog { get; set; } // Five9LeadPostingLog
        //public virtual DbSet<FollowUp> FollowUps { get; set; } // FollowUp
        //public virtual DbSet<FollowUpActivity> FollowUpActivities { get; set; } // FollowUpActivity
        //public virtual DbSet<FollowUpActivityBinder> FollowUpActivityBinders { get; set; } // FollowUpActivityBinder
        //public virtual DbSet<FollowUpActivityPurposeBinder> FollowUpActivityPurposeBinders { get; set; } // FollowUpActivityPurposeBinder
        //public virtual DbSet<FollowUpPriority> FollowUpPriorities { get; set; } // FollowUpPriority
        //public virtual DbSet<FollowUpPurpose> FollowUpPurposes { get; set; } // FollowUpPurpose
        //public virtual DbSet<FollowUpReminderVia> FollowUpReminderVias { get; set; } // FollowUpReminderVia
        //public virtual DbSet<Formula> Formulae { get; set; } // Formula
        //public virtual DbSet<Gender> Genders { get; set; } // Gender
        //public virtual DbSet<GenericAttribute> GenericAttributes { get; set; } // GenericAttribute
        //public virtual DbSet<GiftSource> GiftSources { get; set; } // GiftSource
        //public virtual DbSet<HolidayType> HolidayTypes { get; set; } // HolidayType
        //public virtual DbSet<IncomeType> IncomeTypes { get; set; } // IncomeType
        //public virtual DbSet<InformationMedium> InformationMediums { get; set; } // InformationMedium
        //public virtual DbSet<InitialContact> InitialContacts { get; set; } // InitialContact
        //public virtual DbSet<Investor> Investors { get; set; } // Investor
        //public virtual DbSet<InvestorProduct> InvestorProducts { get; set; } // InvestorProduct
        //public virtual DbSet<JobType> JobTypes { get; set; } // JobType
        //public virtual DbSet<Language> Languages { get; set; } // Language
        //public virtual DbSet<LeadGenAnswerSelection> LeadGenAnswerSelections { get; set; } // LeadGenAnswerSelection
        //public virtual DbSet<LeadGenAnswerSelectionView> LeadGenAnswerSelectionViews { get; set; } // LeadGenAnswerSelectionView
        //public virtual DbSet<LeadGenQuestionGroup> LeadGenQuestionGroups { get; set; } // LeadGenQuestionGroups
        //public virtual DbSet<LeadGenQuestionTree> LeadGenQuestionTrees { get; set; } // LeadGenQuestionTree
        //public virtual DbSet<LeadGridView> LeadGridViews { get; set; } // LeadGridView
        //public virtual DbSet<LeadGroup> LeadGroups { get; set; } // LeadGroup
        //public virtual DbSet<LeadSource> LeadSources { get; set; } // LeadSource
        //public virtual DbSet<LeadSourceDefaultProduct> LeadSourceDefaultProducts { get; set; } // LeadSourceDefaultProduct
        //public virtual DbSet<LeadSourceType> LeadSourceTypes { get; set; } // LeadSourceType
        //public virtual DbSet<LeadType> LeadTypes { get; set; } // LeadType
        //public virtual DbSet<LendingTreeFee> LendingTreeFees { get; set; } // LendingTreeFee
        //public virtual DbSet<LendingTreeLead> LendingTreeLeads { get; set; } // LendingTreeLead
        //public virtual DbSet<LendingTreeLoanRequestPurpose> LendingTreeLoanRequestPurposes { get; set; } // LendingTreeLoanRequestPurpose
        //public virtual DbSet<LendingTreeOption> LendingTreeOptions { get; set; } // LendingTreeOption
        //public virtual DbSet<LendingTreeQuote> LendingTreeQuotes { get; set; } // LendingTreeQuote
        //public virtual DbSet<LendingTreeScore> LendingTreeScores { get; set; } // LendingTreeScore
        //public virtual DbSet<LiabilityType> LiabilityTypes { get; set; } // LiabilityType
        //public virtual DbSet<LoanApplication> LoanApplications { get; set; } // LoanApplication
        //public virtual DbSet<LoanApplicationFee> LoanApplicationFees { get; set; } // LoanApplicationFee
        //public virtual DbSet<LoanApplicationView> LoanApplicationViews { get; set; } // LoanApplicationView
        //public virtual DbSet<LoanContact> LoanContacts { get; set; } // LoanContact
        //public virtual DbSet<LoanContactEthnicityBinder> LoanContactEthnicityBinders { get; set; } // LoanContactEthnicityBinder
        //public virtual DbSet<LoanContactRaceBinder> LoanContactRaceBinders { get; set; } // LoanContactRaceBinder
        //public virtual DbSet<LoanDocType> LoanDocTypes { get; set; } // LoanDocType
        //public virtual DbSet<LoanDocument> LoanDocuments { get; set; } // LoanDocument
        //public virtual DbSet<LoanDocumentStatusList> LoanDocumentStatusLists { get; set; } // LoanDocumentStatusList
        //public virtual DbSet<LoanDocumentSubType> LoanDocumentSubTypes { get; set; } // LoanDocumentSubType
        //public virtual DbSet<LoanDocumentType> LoanDocumentTypes { get; set; } // LoanDocumentType
        //public virtual DbSet<LoanGoal> LoanGoals { get; set; } // LoanGoal
        //public virtual DbSet<LoanIndexType> LoanIndexTypes { get; set; } // LoanIndexType
        //public virtual DbSet<LoanLockPeriod> LoanLockPeriods { get; set; } // LoanLockPeriod
        //public virtual DbSet<LoanPurpose> LoanPurposes { get; set; } // LoanPurpose
        //public virtual DbSet<LoanPurposeProgram> LoanPurposePrograms { get; set; } // LoanPurposeProgram
        //public virtual DbSet<LoanRequest> LoanRequests { get; set; } // LoanRequest
        //public virtual DbSet<LoanRequestDetail> LoanRequestDetails { get; set; } // LoanRequestDetail
        //public virtual DbSet<LoanRequestMergeLog> LoanRequestMergeLogs { get; set; } // LoanRequestMergeLog
        //public virtual DbSet<LoanRequestMessageBinder> LoanRequestMessageBinders { get; set; } // LoanRequestMessageBinder
        //public virtual DbSet<LoanRequestProduct> LoanRequestProducts { get; set; } // LoanRequestProduct
        //public virtual DbSet<LoanRequestProductClass> LoanRequestProductClasses { get; set; } // LoanRequestProductClass
        //public virtual DbSet<LoanRequestProductType> LoanRequestProductTypes { get; set; } // LoanRequestProductType
        //public virtual DbSet<LoanRequestQuestionBinding> LoanRequestQuestionBindings { get; set; } // LoanRequestQuestionBinding
        //public virtual DbSet<LoanToValue> LoanToValues { get; set; } // LoanToValue
        //public virtual DbSet<LoanType> LoanTypes { get; set; } // LoanType
        //public virtual DbSet<LocaleStringResource> LocaleStringResources { get; set; } // LocaleStringResource
        //public virtual DbSet<LockDaysOnRule> LockDaysOnRules { get; set; } // LockDaysOnRule
        //public virtual DbSet<LockStatusCause> LockStatusCauses { get; set; } // LockStatusCause
        //public virtual DbSet<LockStatusList> LockStatusLists { get; set; } // LockStatusList
        //public virtual DbSet<LogItem> LogItems { get; set; } // LogItem
        //public virtual DbSet<MaritalStatusList> MaritalStatusLists { get; set; } // MaritalStatusList
        //public virtual DbSet<MaritalStatusType> MaritalStatusTypes { get; set; } // MaritalStatusType
        //public virtual DbSet<MarksmanLead> MarksmanLeads { get; set; } // MarksmanLead
        //public virtual DbSet<MarksmanLeadDetail> MarksmanLeadDetails { get; set; } // MarksmanLeadDetail
        //public virtual DbSet<MarksmanQuote> MarksmanQuotes { get; set; } // MarksmanQuote
        //public virtual DbSet<MbsRate> MbsRates { get; set; } // MbsRate
        //public virtual DbSet<MbsRateArchive> MbsRateArchives { get; set; } // MbsRateArchive
        //public virtual DbSet<MbsSecurity> MbsSecurities { get; set; } // MbsSecurity
        //public virtual DbSet<MessageOnRule> MessageOnRules { get; set; } // MessageOnRule
        //public virtual DbSet<MessageTemplate> MessageTemplates { get; set; } // MessageTemplate
        //public virtual DbSet<MilitaryAffiliation> MilitaryAffiliations { get; set; } // MilitaryAffiliation
        //public virtual DbSet<MilitaryBranch> MilitaryBranches { get; set; } // MilitaryBranch
        //public virtual DbSet<MilitaryStatusList> MilitaryStatusLists { get; set; } // MilitaryStatusList
        //public virtual DbSet<MortgageEducation> MortgageEducations { get; set; } // MortgageEducation
        //public virtual DbSet<MortgageEducationType> MortgageEducationTypes { get; set; } // MortgageEducationType
        //public virtual DbSet<MortgageOnProperty> MortgageOnProperties { get; set; } // MortgageOnProperty
        //public virtual DbSet<Note> Notes { get; set; } // Note
        //public virtual DbSet<NoteDepartmentBinder> NoteDepartmentBinders { get; set; } // NoteDepartmentBinder
        //public virtual DbSet<NoteDetail> NoteDetails { get; set; } // NoteDetail
        //public virtual DbSet<NoteSubject> NoteSubjects { get; set; } // NoteSubject
        //public virtual DbSet<NoteTopic> NoteTopics { get; set; } // NoteTopic
        //public virtual DbSet<Notification> Notifications { get; set; } // Notification
        //public virtual DbSet<NotificationTo> NotificationToes { get; set; } // NotificationTo
        //public virtual DbSet<ObjectType> ObjectTypes { get; set; } // ObjectType
        //public virtual DbSet<OfficeHoliday> OfficeHolidays { get; set; } // OfficeHoliday
        //public virtual DbSet<OfficeMetroBinder> OfficeMetroBinders { get; set; } // OfficeMetroBinder
        //public virtual DbSet<OppAssignLog> OppAssignLogs { get; set; } // OppAssignLog
        //public virtual DbSet<Opportunity> Opportunities { get; set; } // Opportunity
        //public virtual DbSet<OpportunityDesireRate> OpportunityDesireRates { get; set; } // OpportunityDesireRate
        //public virtual DbSet<OpportunityFee> OpportunityFees { get; set; } // OpportunityFee
        //public virtual DbSet<OpportunityFeeDetail> OpportunityFeeDetails { get; set; } // OpportunityFeeDetail
        //public virtual DbSet<OpportunityFeeDetailPaidBy> OpportunityFeeDetailPaidBies { get; set; } // OpportunityFeeDetailPaidBy
        //public virtual DbSet<OpportunityFeePaidBy> OpportunityFeePaidBies { get; set; } // OpportunityFeePaidBy
        //public virtual DbSet<OpportunityLeadBinder> OpportunityLeadBinders { get; set; } // OpportunityLeadBinder
        //public virtual DbSet<OpportunityLockStatusLog> OpportunityLockStatusLogs { get; set; } // OpportunityLockStatusLog
        //public virtual DbSet<OpportunityPropertyTax> OpportunityPropertyTaxes { get; set; } // OpportunityPropertyTax
        //public virtual DbSet<OpportunityStatusLog> OpportunityStatusLogs { get; set; } // OpportunityStatusLog
        //public virtual DbSet<OpportunityTaxOn> OpportunityTaxOns { get; set; } // OpportunityTaxOn
        //public virtual DbSet<OtherEmploymentIncome> OtherEmploymentIncomes { get; set; } // OtherEmploymentIncome
        //public virtual DbSet<OtherEmploymentIncomeHistory> OtherEmploymentIncomeHistories { get; set; } // OtherEmploymentIncomeHistory
        //public virtual DbSet<OtherEmploymentIncomeType> OtherEmploymentIncomeTypes { get; set; } // OtherEmploymentIncomeType
        //public virtual DbSet<OtherIncome> OtherIncomes { get; set; } // OtherIncome
        //public virtual DbSet<OtpTracing> OtpTracings { get; set; } // OtpTracing
        //public virtual DbSet<OwnerShipInterest> OwnerShipInterests { get; set; } // OwnerShipInterest
        //public virtual DbSet<OwnershipType> OwnershipTypes { get; set; } // OwnershipType
        //public virtual DbSet<OwnType> OwnTypes { get; set; } // OwnType
        //public virtual DbSet<PaidBy> PaidBies { get; set; } // PaidBy
        //public virtual DbSet<PasswordPolicy> PasswordPolicies { get; set; } // PasswordPolicy
        //public virtual DbSet<PaymentOn> PaymentOns { get; set; } // PaymentOn
        //public virtual DbSet<PmiCompany> PmiCompanies { get; set; } // PmiCompany
        //public virtual DbSet<Position> Positions { get; set; } // Position
        //public virtual DbSet<PrepayPenalty> PrepayPenalties { get; set; } // PrepayPenalty
        //public virtual DbSet<Product> Products { get; set; } // Product
        //public virtual DbSet<ProductAd> ProductAds { get; set; } // ProductAd
        //public virtual DbSet<ProductAmortizationType> ProductAmortizationTypes { get; set; } // ProductAmortizationType
        //public virtual DbSet<ProductBestEx> ProductBestExes { get; set; } // ProductBestEx
        //public virtual DbSet<ProductCatalog> ProductCatalogs { get; set; } // ProductCatalog
        //public virtual DbSet<ProductClass> ProductClasses { get; set; } // ProductClass
        //public virtual DbSet<ProductFamily> ProductFamilies { get; set; } // ProductFamily
        //public virtual DbSet<ProductQualifier> ProductQualifiers { get; set; } // ProductQualifier
        //public virtual DbSet<ProductTemplatekey> ProductTemplatekeys { get; set; } // ProductTemplatekey
        //public virtual DbSet<ProductType> ProductTypes { get; set; } // ProductType
        //public virtual DbSet<ProfitTable> ProfitTables { get; set; } // ProfitTable
        //public virtual DbSet<ProjectType> ProjectTypes { get; set; } // ProjectType
        //public virtual DbSet<PromotionalProgram> PromotionalPrograms { get; set; } // PromotionalProgram
        //public virtual DbSet<PropertyInfo> PropertyInfoes { get; set; } // PropertyInfo
        //public virtual DbSet<PropertyTax> PropertyTaxes { get; set; } // PropertyTax
        //public virtual DbSet<PropertyTaxEscrow> PropertyTaxEscrows { get; set; } // PropertyTaxEscrow
        //public virtual DbSet<PropertyType> PropertyTypes { get; set; } // PropertyType
        //public virtual DbSet<PropertyUsage> PropertyUsages { get; set; } // PropertyUsage
        //public virtual DbSet<QtPhoneInfo> QtPhoneInfoes { get; set; } // qtPhoneInfo
        //public virtual DbSet<Question> Questions { get; set; } // Question
        //public virtual DbSet<QuestionGroup> QuestionGroups { get; set; } // QuestionGroup
        //public virtual DbSet<QuestionOption> QuestionOptions { get; set; } // QuestionOption
        //public virtual DbSet<QuestionPurposeBinder> QuestionPurposeBinders { get; set; } // QuestionPurposeBinder
        //public virtual DbSet<QuestionResponse> QuestionResponses { get; set; } // QuestionResponse
        //public virtual DbSet<QuestionSection> QuestionSections { get; set; } // QuestionSection
        //public virtual DbSet<QuestionType> QuestionTypes { get; set; } // QuestionType
        //public virtual DbSet<QueuedEmail> QueuedEmails { get; set; } // QueuedEmail
        //public virtual DbSet<QuoteResult> QuoteResults { get; set; } // QuoteResult
        //public virtual DbSet<Race> Races { get; set; } // Race
        //public virtual DbSet<RaceDetail> RaceDetails { get; set; } // RaceDetail
        //public virtual DbSet<RangeSet> RangeSets { get; set; } // RangeSet
        //public virtual DbSet<RangeSetDetail> RangeSetDetails { get; set; } // RangeSetDetail
        //public virtual DbSet<RateArchive> RateArchives { get; set; } // RateArchive
        //public virtual DbSet<RateServiceParameter> RateServiceParameters { get; set; } // RateServiceParameter
        //public virtual DbSet<RateWidget> RateWidgets { get; set; } // RateWidget
        //public virtual DbSet<Region> Regions { get; set; } // Region
        //public virtual DbSet<ResidencyState> ResidencyStates { get; set; } // ResidencyState
        //public virtual DbSet<ResidencyType> ResidencyTypes { get; set; } // ResidencyType
        //public virtual DbSet<ReviewComment> ReviewComments { get; set; } // ReviewComment
        //public virtual DbSet<ReviewContact> ReviewContacts { get; set; } // ReviewContact
        //public virtual DbSet<ReviewPosted> ReviewPosteds { get; set; } // ReviewPosted
        //public virtual DbSet<ReviewProperty> ReviewProperties { get; set; } // ReviewProperty
        //public virtual DbSet<ReviewSite> ReviewSites { get; set; } // ReviewSite
        //public virtual DbSet<ReviewSiteAccount> ReviewSiteAccounts { get; set; } // ReviewSiteAccount
        //public virtual DbSet<Rule> Rules { get; set; } // Rule
        //public virtual DbSet<RuleMessage> RuleMessages { get; set; } // RuleMessage
        //public virtual DbSet<ScheduleActivity> ScheduleActivities { get; set; } // ScheduleActivity
        //public virtual DbSet<ScheduleActivityLog> ScheduleActivityLogs { get; set; } // ScheduleActivityLog
        //public virtual DbSet<Scheduler> Schedulers { get; set; } // Scheduler
        //public virtual DbSet<SecondLien> SecondLiens { get; set; } // SecondLien
        //public virtual DbSet<SecondLienType> SecondLienTypes { get; set; } // SecondLienType
        //public virtual DbSet<ServicesSetting> ServicesSettings { get; set; } // ServicesSetting
        //public virtual DbSet<SessionLog> SessionLogs { get; set; } // SessionLog
        //public virtual DbSet<SessionLogDetail> SessionLogDetails { get; set; } // SessionLogDetail
        //public virtual DbSet<Setting> Settings { get; set; } // Setting
        //public virtual DbSet<SettingGroup> SettingGroups { get; set; } // SettingGroup
        //public virtual DbSet<SettingGroupBinder> SettingGroupBinders { get; set; } // SettingGroupBinder
        //public virtual DbSet<SetupTable> SetupTables { get; set; } // SetupTable
        //public virtual DbSet<Sitemap> Sitemaps { get; set; } // Sitemap
        //public virtual DbSet<State> States { get; set; } // State
        //public virtual DbSet<StateCountyCity> StateCountyCities { get; set; } // StateCountyCity
        //public virtual DbSet<StatusCause> StatusCauses { get; set; } // StatusCause
        //public virtual DbSet<StatusList> StatusLists { get; set; } // StatusList
        //public virtual DbSet<Subordinate> Subordinates { get; set; } // Subordinate
        //public virtual DbSet<Subscription> Subscriptions { get; set; } // Subscription
        //public virtual DbSet<SubscriptionGroup> SubscriptionGroups { get; set; } // SubscriptionGroup
        //public virtual DbSet<SubscriptionSection> SubscriptionSections { get; set; } // SubscriptionSection
        //public virtual DbSet<SupportPaymentType> SupportPaymentTypes { get; set; } // SupportPaymentType
        //public virtual DbSet<SystemEvent> SystemEvents { get; set; } // SystemEvent
        //public virtual DbSet<SystemEventLog> SystemEventLogs { get; set; } // SystemEventLog
        //public virtual DbSet<TaxCityBinder> TaxCityBinders { get; set; } // TaxCityBinder
        //public virtual DbSet<TaxCountyBinder> TaxCountyBinders { get; set; } // TaxCountyBinder
        //public virtual DbSet<Team> Teams { get; set; } // Team
        //public virtual DbSet<TeamMember> TeamMembers { get; set; } // TeamMember
        //public virtual DbSet<Template> Templates { get; set; } // Template
        //public virtual DbSet<TemplateAttachment> TemplateAttachments { get; set; } // TemplateAttachment
        //public virtual DbSet<TemplateForm> TemplateForms { get; set; } // TemplateForm
        //public virtual DbSet<TemplateFormPlot> TemplateFormPlots { get; set; } // TemplateFormPlot
        //public virtual DbSet<TemplateFormPlotDetail> TemplateFormPlotDetails { get; set; } // TemplateFormPlotDetail
        //public virtual DbSet<TemplateFormSection> TemplateFormSections { get; set; } // TemplateFormSection
        //public virtual DbSet<TemplateLocationBinder> TemplateLocationBinders { get; set; } // TemplateLocationBinder
        //public virtual DbSet<TemplateType> TemplateTypes { get; set; } // TemplateType
        //public virtual DbSet<TempRecording> TempRecordings { get; set; } // tempRecording
        //public virtual DbSet<ThirdPartyCode> ThirdPartyCodes { get; set; } // ThirdPartyCode
        //public virtual DbSet<ThirdPartyLead> ThirdPartyLeads { get; set; } // ThirdPartyLead
        //public virtual DbSet<ThirdPartyStatusList> ThirdPartyStatusLists { get; set; } // ThirdPartyStatusList
        //public virtual DbSet<TimeZone> TimeZones { get; set; } // TimeZone
        //public virtual DbSet<TitleEstate> TitleEstates { get; set; } // TitleEstate
        //public virtual DbSet<TitleHeldWith> TitleHeldWiths { get; set; } // TitleHeldWith
        //public virtual DbSet<TitleLandTenure> TitleLandTenures { get; set; } // TitleLandTenure
        //public virtual DbSet<TitleManner> TitleManners { get; set; } // TitleManner
        //public virtual DbSet<TitleTrustInfo> TitleTrustInfoes { get; set; } // TitleTrustInfo
        //public virtual DbSet<TransactionInfo> TransactionInfoes { get; set; } // TransactionInfo
        //public virtual DbSet<TransactionInfoBinder> TransactionInfoBinders { get; set; } // TransactionInfoBinder
        //public virtual DbSet<TriggerValue> TriggerValues { get; set; } // TriggerValue
        //public virtual DbSet<UserAuthBinder> UserAuthBinders { get; set; } // UserAuthBinder
        //public virtual DbSet<UserGridSetting> UserGridSettings { get; set; } // UserGridSetting
        //public virtual DbSet<UserInRole> UserInRoles { get; set; } // UserInRole
        //public virtual DbSet<UserPermission> UserPermissions { get; set; } // UserPermission
        //public virtual DbSet<UserPermissionRoleBinder> UserPermissionRoleBinders { get; set; } // UserPermissionRoleBinder
        //public virtual DbSet<UserPermissionType> UserPermissionTypes { get; set; } // UserPermissionType
        //public virtual DbSet<UserProfile> UserProfiles { get; set; } // UserProfile
        //public virtual DbSet<UserResetPasswordKey> UserResetPasswordKeys { get; set; } // UserResetPasswordKey
        //public virtual DbSet<UserResetPasswordLog> UserResetPasswordLogs { get; set; } // UserResetPasswordLog
        //public virtual DbSet<UserRole> UserRoles { get; set; } // UserRole
        //public virtual DbSet<VaDetail> VaDetails { get; set; } // VaDetails
        //public virtual DbSet<VaOccupancy> VaOccupancies { get; set; } // VaOccupancy
        //public virtual DbSet<VEmployeePhoneInfo> VEmployeePhoneInfoes { get; set; } // vEmployeePhoneInfo
        //public virtual DbSet<Vendor> Vendors { get; set; } // Vendor
        //public virtual DbSet<VendorCustomerBinder> VendorCustomerBinders { get; set; } // VendorCustomerBinder
        //public virtual DbSet<VendorType> VendorTypes { get; set; } // VendorType
        //public virtual DbSet<Visitor> Visitors { get; set; } // Visitor
        //public virtual DbSet<Vortex_ActivityDirection> Vortex_ActivityDirections { get; set; } // ActivityDirection
        //public virtual DbSet<Vortex_ActivityLog> Vortex_ActivityLogs { get; set; } // ActivityLog
        //public virtual DbSet<Vortex_ActivityType> Vortex_ActivityTypes { get; set; } // ActivityType
        //public virtual DbSet<Vortex_AgentStatusLog> Vortex_AgentStatusLogs { get; set; } // AgentStatusLog
        //public virtual DbSet<Vortex_CallLog> Vortex_CallLogs { get; set; } // CallLog
        //public virtual DbSet<Vortex_ClientInfo> Vortex_ClientInfoes { get; set; } // ClientInfo
        //public virtual DbSet<Vortex_ConferenceLog> Vortex_ConferenceLogs { get; set; } // ConferenceLogs
        //public virtual DbSet<Vortex_DeviceType> Vortex_DeviceTypes { get; set; } // DeviceType
        //public virtual DbSet<Vortex_FollowUp> Vortex_FollowUps { get; set; } // FollowUp
        //public virtual DbSet<Vortex_Message> Vortex_Messages { get; set; } // Message
        //public virtual DbSet<Vortex_Recording> Vortex_Recordings { get; set; } // Recording
        //public virtual DbSet<Vortex_SmsLog> Vortex_SmsLogs { get; set; } // SMSLog
        //public virtual DbSet<Vortex_StatusList> Vortex_StatusLists { get; set; } // StatusList
        //public virtual DbSet<Vortex_TwilioErrorCode> Vortex_TwilioErrorCodes { get; set; } // TwilioErrorCodes
        //public virtual DbSet<Vortex_UserSessionLog> Vortex_UserSessionLogs { get; set; } // UserSessionLog
        //public virtual DbSet<Vortex_UserSetting> Vortex_UserSettings { get; set; } // UserSetting
        //public virtual DbSet<Vortex_VoiceMailAssignment> Vortex_VoiceMailAssignments { get; set; } // VoiceMailAssignment
        //public virtual DbSet<Vortex_VoiceMailReadBy> Vortex_VoiceMailReadBies { get; set; } // VoiceMailReadBy
        //public virtual DbSet<Vortex_VortexAgentStatusView> Vortex_VortexAgentStatusViews { get; set; } // VortexAgentStatusView
        //public virtual DbSet<VortexActiveOpportunity> VortexActiveOpportunities { get; set; } // VortexActiveOpportunity
        //public virtual DbSet<VortexConfiguration> VortexConfigurations { get; set; } // VortexConfiguration
        //public virtual DbSet<VPhoneInfo> VPhoneInfoes { get; set; } // vPhoneInfo
        //public virtual DbSet<VPhoneInfoNew> VPhoneInfoNews { get; set; } // vPhoneInfoNew
        //public virtual DbSet<WindowsService> WindowsServices { get; set; } // WindowsService
        //public virtual DbSet<WindowsServiceRunLog> WindowsServiceRunLogs { get; set; } // WindowsServiceRunLog
        //public virtual DbSet<WorkFlow> WorkFlows { get; set; } // WorkFlow
        //public virtual DbSet<WorkQueue> WorkQueues { get; set; } // WorkQueue
        //public virtual DbSet<WorkQueueKeyValue> WorkQueueKeyValues { get; set; } // WorkQueueKeyValue
        //public virtual DbSet<WorkQueueTracking> WorkQueueTrackings { get; set; } // WorkQueueTracking
        //public virtual DbSet<ZillowLead> ZillowLeads { get; set; } // ZillowLead
        //public virtual DbSet<ZillowLeadFee> ZillowLeadFees { get; set; } // ZillowLeadFee
        //public virtual DbSet<ZillowLeadProgram> ZillowLeadPrograms { get; set; } // ZillowLeadProgram
        //public virtual DbSet<ZipCode> ZipCodes { get; set; } // ZipCode

		public RainMakerContext(DbContextOptions<RainMakerContext> options)
            : base(options)
        {
		            InitializePartial();
        }
		
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.ApplyConfiguration(new AccountTypeMap());
            modelBuilder.ApplyConfiguration(new AclMap());
            modelBuilder.ApplyConfiguration(new ActivityMap());
            modelBuilder.ApplyConfiguration(new ActivitySubscriptionBinderMap());
            modelBuilder.ApplyConfiguration(new ActivityTypeMap());
            modelBuilder.ApplyConfiguration(new AddressInfoMap());
            modelBuilder.ApplyConfiguration(new AdjustmentMap());
            modelBuilder.ApplyConfiguration(new AdsGeoLocationMap());
            modelBuilder.ApplyConfiguration(new AdsPageLocationMap());
            modelBuilder.ApplyConfiguration(new AdsPromotionMap());
            modelBuilder.ApplyConfiguration(new AdsSizeMap());
            modelBuilder.ApplyConfiguration(new AdsSourceMap());
            modelBuilder.ApplyConfiguration(new AdsSourceMessageMap());
            modelBuilder.ApplyConfiguration(new AdsTypeMap());
            modelBuilder.ApplyConfiguration(new AgencyMap());
            modelBuilder.ApplyConfiguration(new AssetBorrowerBinderMap());
            modelBuilder.ApplyConfiguration(new AssetTypeMap());
            modelBuilder.ApplyConfiguration(new AuditTrailMap());
            modelBuilder.ApplyConfiguration(new AusProcessingTypeMap());
            modelBuilder.ApplyConfiguration(new AuthApplicationKeyMap());
            modelBuilder.ApplyConfiguration(new AuthProviderMap());
            modelBuilder.ApplyConfiguration(new AuthTokenMap());
            modelBuilder.ApplyConfiguration(new BankRateArchiveMap());
            modelBuilder.ApplyConfiguration(new BankRateCreditScoreBinderMap());
            modelBuilder.ApplyConfiguration(new BankRateInstanceMap());
            modelBuilder.ApplyConfiguration(new BankRateLeadMap());
            modelBuilder.ApplyConfiguration(new BankRateLoanToValueBinderMap());
            modelBuilder.ApplyConfiguration(new BankRateParameterMap());
            modelBuilder.ApplyConfiguration(new BankRatePointMap());
            modelBuilder.ApplyConfiguration(new BankRatePricingRequestMap());
            modelBuilder.ApplyConfiguration(new BankRateProductMap());
            modelBuilder.ApplyConfiguration(new BankRatePropertyTypeBinderMap());
            modelBuilder.ApplyConfiguration(new BankRatePropertyUsageBinderMap());
            modelBuilder.ApplyConfiguration(new BankRateRequestMap());
            modelBuilder.ApplyConfiguration(new BankRateServiceStageMap());
            modelBuilder.ApplyConfiguration(new BankRateStageMap());
            modelBuilder.ApplyConfiguration(new BankRateTierMap());
            modelBuilder.ApplyConfiguration(new BankRuptcyMap());
            modelBuilder.ApplyConfiguration(new BenchMarkMap());
            modelBuilder.ApplyConfiguration(new BenchMarkRateMap());
            modelBuilder.ApplyConfiguration(new BlacklistIpMap());
            modelBuilder.ApplyConfiguration(new BorrowerMap());
            modelBuilder.ApplyConfiguration(new BorrowerAccountMap());
            modelBuilder.ApplyConfiguration(new BorrowerAccountBinderMap());
            modelBuilder.ApplyConfiguration(new BorrowerAssetMap());
            modelBuilder.ApplyConfiguration(new BorrowerBankRuptcyMap());
            modelBuilder.ApplyConfiguration(new BorrowerConsentMap());
            modelBuilder.ApplyConfiguration(new BorrowerConsentLogMap());
            modelBuilder.ApplyConfiguration(new BorrowerLiabilityMap());
            modelBuilder.ApplyConfiguration(new BorrowerPropertyMap());
            modelBuilder.ApplyConfiguration(new BorrowerQuestionResponseMap());
            modelBuilder.ApplyConfiguration(new BorrowerResidenceMap());
            modelBuilder.ApplyConfiguration(new BorrowerSupportPaymentMap());
            modelBuilder.ApplyConfiguration(new BranchMap());
            modelBuilder.ApplyConfiguration(new BranchEmailMap());
            modelBuilder.ApplyConfiguration(new BranchPhoneMap());
            modelBuilder.ApplyConfiguration(new BranchPhoneBinderMap());
            modelBuilder.ApplyConfiguration(new BreachedPasswordMap());
            modelBuilder.ApplyConfiguration(new BusinessUnitMap());
            modelBuilder.ApplyConfiguration(new BusinessUnitEmailMap());
            modelBuilder.ApplyConfiguration(new BusinessUnitPhoneMap());
            modelBuilder.ApplyConfiguration(new BusinessUnitPhoneBinderMap());
            modelBuilder.ApplyConfiguration(new CampaignMap());
            modelBuilder.ApplyConfiguration(new CampaignActivityBinderMap());
            modelBuilder.ApplyConfiguration(new CampaignQueueMap());
            modelBuilder.ApplyConfiguration(new CampaignTriggerMap());
            modelBuilder.ApplyConfiguration(new CampaignTriggerBinderMap());
            modelBuilder.ApplyConfiguration(new CityMap());
            modelBuilder.ApplyConfiguration(new CmsPageMap());
            modelBuilder.ApplyConfiguration(new CompanyPhoneInfoMap());
            modelBuilder.ApplyConfiguration(new ConsentTypeMap());
            modelBuilder.ApplyConfiguration(new ContactMap());
            modelBuilder.ApplyConfiguration(new ContactAddressMap());
            modelBuilder.ApplyConfiguration(new ContactEmailInfoMap());
            modelBuilder.ApplyConfiguration(new ContactInfoMap());
            modelBuilder.ApplyConfiguration(new ContactPhoneInfoMap());
            modelBuilder.ApplyConfiguration(new ContactSearchViewMap());
            modelBuilder.ApplyConfiguration(new CountryMap());
            modelBuilder.ApplyConfiguration(new CountyMap());
            modelBuilder.ApplyConfiguration(new CountyTypeMap());
            modelBuilder.ApplyConfiguration(new CreditScoreMap());
            modelBuilder.ApplyConfiguration(new CurrentRateMap());
            modelBuilder.ApplyConfiguration(new CurrentRateViewMap());
            modelBuilder.ApplyConfiguration(new CusSubscriptionBinderMap());
            modelBuilder.ApplyConfiguration(new CustomerMap());
            modelBuilder.ApplyConfiguration(new CustomerInfoViewMap());
            modelBuilder.ApplyConfiguration(new CustomerTypeMap());
            modelBuilder.ApplyConfiguration(new CustomerTypeBinderMap());
            modelBuilder.ApplyConfiguration(new DebtToIncomeRatioMap());
            modelBuilder.ApplyConfiguration(new DefaultLoanParameterMap());
            modelBuilder.ApplyConfiguration(new DemographicMediumMap());
            modelBuilder.ApplyConfiguration(new DenormOpportunityContactMap());
            modelBuilder.ApplyConfiguration(new DepartmentMap());
            modelBuilder.ApplyConfiguration(new EducationFormatMap());
            modelBuilder.ApplyConfiguration(new EmailAccountMap());
            modelBuilder.ApplyConfiguration(new EmailAttachmentsLogMap());
            modelBuilder.ApplyConfiguration(new EmailLinkTrackingMap());
            modelBuilder.ApplyConfiguration(new EmailLogMap());
            modelBuilder.ApplyConfiguration(new EmailLogBinderMap());
            modelBuilder.ApplyConfiguration(new EmailLogTrackingViewMap());
            modelBuilder.ApplyConfiguration(new EmailTrackingMap());
            modelBuilder.ApplyConfiguration(new EmailVerificationMap());
            modelBuilder.ApplyConfiguration(new EmpAssignmentRuleBinderMap());
            modelBuilder.ApplyConfiguration(new EmpDepartmentBinderMap());
            modelBuilder.ApplyConfiguration(new EmployeeMap());
            modelBuilder.ApplyConfiguration(new EmployeeBusinessUnitEmailMap());
            modelBuilder.ApplyConfiguration(new EmployeeCsrLoBinderMap());
            modelBuilder.ApplyConfiguration(new EmployeeLicenseMap());
            modelBuilder.ApplyConfiguration(new EmployeePhoneBinderMap());
            modelBuilder.ApplyConfiguration(new EmploymentInfoMap());
            modelBuilder.ApplyConfiguration(new EntityTypeMap());
            modelBuilder.ApplyConfiguration(new EscrowEntityTypeMap());
            modelBuilder.ApplyConfiguration(new EthnicityMap());
            modelBuilder.ApplyConfiguration(new EthnicityDetailMap());
            modelBuilder.ApplyConfiguration(new FamilyRelationTypeMap());
            modelBuilder.ApplyConfiguration(new FeeMap());
            modelBuilder.ApplyConfiguration(new FeeBlockMap());
            modelBuilder.ApplyConfiguration(new FeeCategoryMap());
            modelBuilder.ApplyConfiguration(new FeeDetailMap());
            modelBuilder.ApplyConfiguration(new FeeDetailPaidByMap());
            modelBuilder.ApplyConfiguration(new FeeTypeMap());
            modelBuilder.ApplyConfiguration(new FileAttachmentMap());
            modelBuilder.ApplyConfiguration(new Five9LeadPostingMap());
            modelBuilder.ApplyConfiguration(new Five9LeadPostingLogMap());
            modelBuilder.ApplyConfiguration(new FollowUpMap());
            modelBuilder.ApplyConfiguration(new FollowUpActivityMap());
            modelBuilder.ApplyConfiguration(new FollowUpActivityBinderMap());
            modelBuilder.ApplyConfiguration(new FollowUpActivityPurposeBinderMap());
            modelBuilder.ApplyConfiguration(new FollowUpPriorityMap());
            modelBuilder.ApplyConfiguration(new FollowUpPurposeMap());
            modelBuilder.ApplyConfiguration(new FollowUpReminderViaMap());
            modelBuilder.ApplyConfiguration(new FormulaMap());
            modelBuilder.ApplyConfiguration(new GenderMap());
            modelBuilder.ApplyConfiguration(new GenericAttributeMap());
            modelBuilder.ApplyConfiguration(new GiftSourceMap());
            modelBuilder.ApplyConfiguration(new HolidayTypeMap());
            modelBuilder.ApplyConfiguration(new IncomeTypeMap());
            modelBuilder.ApplyConfiguration(new InformationMediumMap());
            modelBuilder.ApplyConfiguration(new InitialContactMap());
            modelBuilder.ApplyConfiguration(new InvestorMap());
            modelBuilder.ApplyConfiguration(new InvestorProductMap());
            modelBuilder.ApplyConfiguration(new JobTypeMap());
            modelBuilder.ApplyConfiguration(new LanguageMap());
            modelBuilder.ApplyConfiguration(new LeadGenAnswerSelectionMap());
            modelBuilder.ApplyConfiguration(new LeadGenAnswerSelectionViewMap());
            modelBuilder.ApplyConfiguration(new LeadGenQuestionGroupMap());
            modelBuilder.ApplyConfiguration(new LeadGenQuestionTreeMap());
            modelBuilder.ApplyConfiguration(new LeadGridViewMap());
            modelBuilder.ApplyConfiguration(new LeadGroupMap());
            modelBuilder.ApplyConfiguration(new LeadSourceMap());
            modelBuilder.ApplyConfiguration(new LeadSourceDefaultProductMap());
            modelBuilder.ApplyConfiguration(new LeadSourceTypeMap());
            modelBuilder.ApplyConfiguration(new LeadTypeMap());
            modelBuilder.ApplyConfiguration(new LendingTreeFeeMap());
            modelBuilder.ApplyConfiguration(new LendingTreeLeadMap());
            modelBuilder.ApplyConfiguration(new LendingTreeLoanRequestPurposeMap());
            modelBuilder.ApplyConfiguration(new LendingTreeOptionMap());
            modelBuilder.ApplyConfiguration(new LendingTreeQuoteMap());
            modelBuilder.ApplyConfiguration(new LendingTreeScoreMap());
            modelBuilder.ApplyConfiguration(new LiabilityTypeMap());
            modelBuilder.ApplyConfiguration(new LoanApplicationMap());
            modelBuilder.ApplyConfiguration(new LoanApplicationFeeMap());
            modelBuilder.ApplyConfiguration(new LoanApplicationViewMap());
            modelBuilder.ApplyConfiguration(new LoanContactMap());
            modelBuilder.ApplyConfiguration(new LoanContactEthnicityBinderMap());
            modelBuilder.ApplyConfiguration(new LoanContactRaceBinderMap());
            modelBuilder.ApplyConfiguration(new LoanDocTypeMap());
            modelBuilder.ApplyConfiguration(new LoanDocumentMap());
            modelBuilder.ApplyConfiguration(new LoanDocumentStatusListMap());
            modelBuilder.ApplyConfiguration(new LoanDocumentSubTypeMap());
            modelBuilder.ApplyConfiguration(new LoanDocumentTypeMap());
            modelBuilder.ApplyConfiguration(new LoanGoalMap());
            modelBuilder.ApplyConfiguration(new LoanIndexTypeMap());
            modelBuilder.ApplyConfiguration(new LoanLockPeriodMap());
            modelBuilder.ApplyConfiguration(new LoanPurposeMap());
            modelBuilder.ApplyConfiguration(new LoanPurposeProgramMap());
            modelBuilder.ApplyConfiguration(new LoanRequestMap());
            modelBuilder.ApplyConfiguration(new LoanRequestDetailMap());
            modelBuilder.ApplyConfiguration(new LoanRequestMergeLogMap());
            modelBuilder.ApplyConfiguration(new LoanRequestMessageBinderMap());
            modelBuilder.ApplyConfiguration(new LoanRequestProductMap());
            modelBuilder.ApplyConfiguration(new LoanRequestProductClassMap());
            modelBuilder.ApplyConfiguration(new LoanRequestProductTypeMap());
            modelBuilder.ApplyConfiguration(new LoanRequestQuestionBindingMap());
            modelBuilder.ApplyConfiguration(new LoanToValueMap());
            modelBuilder.ApplyConfiguration(new LoanTypeMap());
            modelBuilder.ApplyConfiguration(new LocaleStringResourceMap());
            modelBuilder.ApplyConfiguration(new LockDaysOnRuleMap());
            modelBuilder.ApplyConfiguration(new LockStatusCauseMap());
            modelBuilder.ApplyConfiguration(new LockStatusListMap());
            modelBuilder.ApplyConfiguration(new LogItemMap());
            modelBuilder.ApplyConfiguration(new MaritalStatusListMap());
            modelBuilder.ApplyConfiguration(new MaritalStatusTypeMap());
            modelBuilder.ApplyConfiguration(new MarksmanLeadMap());
            modelBuilder.ApplyConfiguration(new MarksmanLeadDetailMap());
            modelBuilder.ApplyConfiguration(new MarksmanQuoteMap());
            modelBuilder.ApplyConfiguration(new MbsRateMap());
            modelBuilder.ApplyConfiguration(new MbsRateArchiveMap());
            modelBuilder.ApplyConfiguration(new MbsSecurityMap());
            modelBuilder.ApplyConfiguration(new MessageOnRuleMap());
            modelBuilder.ApplyConfiguration(new MessageTemplateMap());
            modelBuilder.ApplyConfiguration(new MilitaryAffiliationMap());
            modelBuilder.ApplyConfiguration(new MilitaryBranchMap());
            modelBuilder.ApplyConfiguration(new MilitaryStatusListMap());
            modelBuilder.ApplyConfiguration(new MortgageEducationMap());
            modelBuilder.ApplyConfiguration(new MortgageEducationTypeMap());
            modelBuilder.ApplyConfiguration(new MortgageOnPropertyMap());
            modelBuilder.ApplyConfiguration(new NoteMap());
            modelBuilder.ApplyConfiguration(new NoteDepartmentBinderMap());
            modelBuilder.ApplyConfiguration(new NoteDetailMap());
            modelBuilder.ApplyConfiguration(new NoteSubjectMap());
            modelBuilder.ApplyConfiguration(new NoteTopicMap());
            modelBuilder.ApplyConfiguration(new NotificationMap());
            modelBuilder.ApplyConfiguration(new NotificationToMap());
            modelBuilder.ApplyConfiguration(new ObjectTypeMap());
            modelBuilder.ApplyConfiguration(new OfficeHolidayMap());
            modelBuilder.ApplyConfiguration(new OfficeMetroBinderMap());
            modelBuilder.ApplyConfiguration(new OppAssignLogMap());
            modelBuilder.ApplyConfiguration(new OpportunityMap());
            modelBuilder.ApplyConfiguration(new OpportunityDesireRateMap());
            modelBuilder.ApplyConfiguration(new OpportunityFeeMap());
            modelBuilder.ApplyConfiguration(new OpportunityFeeDetailMap());
            modelBuilder.ApplyConfiguration(new OpportunityFeeDetailPaidByMap());
            modelBuilder.ApplyConfiguration(new OpportunityFeePaidByMap());
            modelBuilder.ApplyConfiguration(new OpportunityLeadBinderMap());
            modelBuilder.ApplyConfiguration(new OpportunityLockStatusLogMap());
            modelBuilder.ApplyConfiguration(new OpportunityPropertyTaxMap());
            modelBuilder.ApplyConfiguration(new OpportunityStatusLogMap());
            modelBuilder.ApplyConfiguration(new OpportunityTaxOnMap());
            modelBuilder.ApplyConfiguration(new OtherEmploymentIncomeMap());
            modelBuilder.ApplyConfiguration(new OtherEmploymentIncomeHistoryMap());
            modelBuilder.ApplyConfiguration(new OtherEmploymentIncomeTypeMap());
            modelBuilder.ApplyConfiguration(new OtherIncomeMap());
            modelBuilder.ApplyConfiguration(new OtpTracingMap());
            modelBuilder.ApplyConfiguration(new OwnerShipInterestMap());
            modelBuilder.ApplyConfiguration(new OwnershipTypeMap());
            modelBuilder.ApplyConfiguration(new OwnTypeMap());
            modelBuilder.ApplyConfiguration(new PaidByMap());
            modelBuilder.ApplyConfiguration(new PasswordPolicyMap());
            modelBuilder.ApplyConfiguration(new PaymentOnMap());
            modelBuilder.ApplyConfiguration(new PmiCompanyMap());
            modelBuilder.ApplyConfiguration(new PositionMap());
            modelBuilder.ApplyConfiguration(new PrepayPenaltyMap());
            modelBuilder.ApplyConfiguration(new ProductMap());
            modelBuilder.ApplyConfiguration(new ProductAdMap());
            modelBuilder.ApplyConfiguration(new ProductAmortizationTypeMap());
            modelBuilder.ApplyConfiguration(new ProductBestExMap());
            modelBuilder.ApplyConfiguration(new ProductCatalogMap());
            modelBuilder.ApplyConfiguration(new ProductClassMap());
            modelBuilder.ApplyConfiguration(new ProductFamilyMap());
            modelBuilder.ApplyConfiguration(new ProductQualifierMap());
            modelBuilder.ApplyConfiguration(new ProductTemplatekeyMap());
            modelBuilder.ApplyConfiguration(new ProductTypeMap());
            modelBuilder.ApplyConfiguration(new ProfitTableMap());
            modelBuilder.ApplyConfiguration(new ProjectTypeMap());
            modelBuilder.ApplyConfiguration(new PromotionalProgramMap());
            modelBuilder.ApplyConfiguration(new PropertyInfoMap());
            modelBuilder.ApplyConfiguration(new PropertyTaxMap());
            modelBuilder.ApplyConfiguration(new PropertyTaxEscrowMap());
            modelBuilder.ApplyConfiguration(new PropertyTypeMap());
            modelBuilder.ApplyConfiguration(new PropertyUsageMap());
            modelBuilder.ApplyConfiguration(new QtPhoneInfoMap());
            modelBuilder.ApplyConfiguration(new QuestionMap());
            modelBuilder.ApplyConfiguration(new QuestionGroupMap());
            modelBuilder.ApplyConfiguration(new QuestionOptionMap());
            modelBuilder.ApplyConfiguration(new QuestionPurposeBinderMap());
            modelBuilder.ApplyConfiguration(new QuestionResponseMap());
            modelBuilder.ApplyConfiguration(new QuestionSectionMap());
            modelBuilder.ApplyConfiguration(new QuestionTypeMap());
            modelBuilder.ApplyConfiguration(new QueuedEmailMap());
            modelBuilder.ApplyConfiguration(new QuoteResultMap());
            modelBuilder.ApplyConfiguration(new RaceMap());
            modelBuilder.ApplyConfiguration(new RaceDetailMap());
            modelBuilder.ApplyConfiguration(new RangeSetMap());
            modelBuilder.ApplyConfiguration(new RangeSetDetailMap());
            modelBuilder.ApplyConfiguration(new RateArchiveMap());
            modelBuilder.ApplyConfiguration(new RateServiceParameterMap());
            modelBuilder.ApplyConfiguration(new RateWidgetMap());
            modelBuilder.ApplyConfiguration(new RegionMap());
            modelBuilder.ApplyConfiguration(new ResidencyStateMap());
            modelBuilder.ApplyConfiguration(new ResidencyTypeMap());
            modelBuilder.ApplyConfiguration(new ReviewCommentMap());
            modelBuilder.ApplyConfiguration(new ReviewContactMap());
            modelBuilder.ApplyConfiguration(new ReviewPostedMap());
            modelBuilder.ApplyConfiguration(new ReviewPropertyMap());
            modelBuilder.ApplyConfiguration(new ReviewSiteMap());
            modelBuilder.ApplyConfiguration(new ReviewSiteAccountMap());
            modelBuilder.ApplyConfiguration(new RuleMap());
            modelBuilder.ApplyConfiguration(new RuleMessageMap());
            modelBuilder.ApplyConfiguration(new ScheduleActivityMap());
            modelBuilder.ApplyConfiguration(new ScheduleActivityLogMap());
            modelBuilder.ApplyConfiguration(new SchedulerMap());
            modelBuilder.ApplyConfiguration(new SecondLienMap());
            modelBuilder.ApplyConfiguration(new SecondLienTypeMap());
            modelBuilder.ApplyConfiguration(new ServicesSettingMap());
            modelBuilder.ApplyConfiguration(new SessionLogMap());
            modelBuilder.ApplyConfiguration(new SessionLogDetailMap());
            modelBuilder.ApplyConfiguration(new SettingMap());
            modelBuilder.ApplyConfiguration(new SettingGroupMap());
            modelBuilder.ApplyConfiguration(new SettingGroupBinderMap());
            modelBuilder.ApplyConfiguration(new SetupTableMap());
            modelBuilder.ApplyConfiguration(new SitemapMap());
            modelBuilder.ApplyConfiguration(new StateMap());
            modelBuilder.ApplyConfiguration(new StateCountyCityMap());
            modelBuilder.ApplyConfiguration(new StatusCauseMap());
            modelBuilder.ApplyConfiguration(new StatusListMap());
            modelBuilder.ApplyConfiguration(new SubordinateMap());
            modelBuilder.ApplyConfiguration(new SubscriptionMap());
            modelBuilder.ApplyConfiguration(new SubscriptionGroupMap());
            modelBuilder.ApplyConfiguration(new SubscriptionSectionMap());
            modelBuilder.ApplyConfiguration(new SupportPaymentTypeMap());
            modelBuilder.ApplyConfiguration(new SystemEventMap());
            modelBuilder.ApplyConfiguration(new SystemEventLogMap());
            modelBuilder.ApplyConfiguration(new TaxCityBinderMap());
            modelBuilder.ApplyConfiguration(new TaxCountyBinderMap());
            modelBuilder.ApplyConfiguration(new TeamMap());
            modelBuilder.ApplyConfiguration(new TeamMemberMap());
            modelBuilder.ApplyConfiguration(new TemplateMap());
            modelBuilder.ApplyConfiguration(new TemplateAttachmentMap());
            modelBuilder.ApplyConfiguration(new TemplateFormMap());
            modelBuilder.ApplyConfiguration(new TemplateFormPlotMap());
            modelBuilder.ApplyConfiguration(new TemplateFormPlotDetailMap());
            modelBuilder.ApplyConfiguration(new TemplateFormSectionMap());
            modelBuilder.ApplyConfiguration(new TemplateLocationBinderMap());
            modelBuilder.ApplyConfiguration(new TemplateTypeMap());
            modelBuilder.ApplyConfiguration(new TempRecordingMap());
            modelBuilder.ApplyConfiguration(new ThirdPartyCodeMap());
            modelBuilder.ApplyConfiguration(new ThirdPartyLeadMap());
            modelBuilder.ApplyConfiguration(new ThirdPartyStatusListMap());
            modelBuilder.ApplyConfiguration(new TimeZoneMap());
            modelBuilder.ApplyConfiguration(new TitleEstateMap());
            modelBuilder.ApplyConfiguration(new TitleHeldWithMap());
            modelBuilder.ApplyConfiguration(new TitleLandTenureMap());
            modelBuilder.ApplyConfiguration(new TitleMannerMap());
            modelBuilder.ApplyConfiguration(new TitleTrustInfoMap());
            modelBuilder.ApplyConfiguration(new TransactionInfoMap());
            modelBuilder.ApplyConfiguration(new TransactionInfoBinderMap());
            modelBuilder.ApplyConfiguration(new TriggerValueMap());
            modelBuilder.ApplyConfiguration(new UserAuthBinderMap());
            modelBuilder.ApplyConfiguration(new UserGridSettingMap());
            modelBuilder.ApplyConfiguration(new UserInRoleMap());
            modelBuilder.ApplyConfiguration(new UserPermissionMap());
            modelBuilder.ApplyConfiguration(new UserPermissionRoleBinderMap());
            modelBuilder.ApplyConfiguration(new UserPermissionTypeMap());
            modelBuilder.ApplyConfiguration(new UserProfileMap());
            modelBuilder.ApplyConfiguration(new UserResetPasswordKeyMap());
            modelBuilder.ApplyConfiguration(new UserResetPasswordLogMap());
            modelBuilder.ApplyConfiguration(new UserRoleMap());
            modelBuilder.ApplyConfiguration(new VaDetailMap());
            modelBuilder.ApplyConfiguration(new VaOccupancyMap());
            modelBuilder.ApplyConfiguration(new VEmployeePhoneInfoMap());
            modelBuilder.ApplyConfiguration(new VendorMap());
            modelBuilder.ApplyConfiguration(new VendorCustomerBinderMap());
            modelBuilder.ApplyConfiguration(new VendorTypeMap());
            modelBuilder.ApplyConfiguration(new VisitorMap());
            modelBuilder.ApplyConfiguration(new Vortex_ActivityDirectionMap());
            modelBuilder.ApplyConfiguration(new Vortex_ActivityLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_ActivityTypeMap());
            modelBuilder.ApplyConfiguration(new Vortex_AgentStatusLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_CallLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_ClientInfoMap());
            modelBuilder.ApplyConfiguration(new Vortex_ConferenceLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_DeviceTypeMap());
            modelBuilder.ApplyConfiguration(new Vortex_FollowUpMap());
            modelBuilder.ApplyConfiguration(new Vortex_MessageMap());
            modelBuilder.ApplyConfiguration(new Vortex_RecordingMap());
            modelBuilder.ApplyConfiguration(new Vortex_SmsLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_StatusListMap());
            modelBuilder.ApplyConfiguration(new Vortex_TwilioErrorCodeMap());
            modelBuilder.ApplyConfiguration(new Vortex_UserSessionLogMap());
            modelBuilder.ApplyConfiguration(new Vortex_UserSettingMap());
            modelBuilder.ApplyConfiguration(new Vortex_VoiceMailAssignmentMap());
            modelBuilder.ApplyConfiguration(new Vortex_VoiceMailReadByMap());
            modelBuilder.ApplyConfiguration(new Vortex_VortexAgentStatusViewMap());
            modelBuilder.ApplyConfiguration(new VortexActiveOpportunityMap());
            modelBuilder.ApplyConfiguration(new VortexConfigurationMap());
            modelBuilder.ApplyConfiguration(new VPhoneInfoMap());
            modelBuilder.ApplyConfiguration(new VPhoneInfoNewMap());
            modelBuilder.ApplyConfiguration(new WindowsServiceMap());
            modelBuilder.ApplyConfiguration(new WindowsServiceRunLogMap());
            modelBuilder.ApplyConfiguration(new WorkFlowMap());
            modelBuilder.ApplyConfiguration(new WorkQueueMap());
            modelBuilder.ApplyConfiguration(new WorkQueueKeyValueMap());
            modelBuilder.ApplyConfiguration(new WorkQueueTrackingMap());
            modelBuilder.ApplyConfiguration(new ZillowLeadMap());
            modelBuilder.ApplyConfiguration(new ZillowLeadFeeMap());
            modelBuilder.ApplyConfiguration(new ZillowLeadProgramMap());
            modelBuilder.ApplyConfiguration(new ZipCodeMap());

            OnModelCreatingPartial(modelBuilder);
        }


        partial void InitializePartial();
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
// </auto-generated>
