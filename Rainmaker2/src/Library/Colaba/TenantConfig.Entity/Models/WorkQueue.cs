// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace TenantConfig.Entity.Models
{
    using System;
    using System.Collections.Generic;

    // WorkQueue
    
    public partial class WorkQueue : URF.Core.EF.Trackable.Entity
    {
        public long Id { get; set; } // Id (Primary key)
        public int? ActivityId { get; set; } // ActivityId
        public int? TenantId { get; set; } // TenantId
        public int? BranchId { get; set; } // BranchId
        public System.DateTime? StartDate { get; set; } // StartDate
        public System.DateTime? EndDate { get; set; } // EndDate
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public int? Priority { get; set; } // Priority
        public int? Retries { get; set; } // Retries
        public int? RetryCount { get; set; } // RetryCount
        public bool? IsActive { get; set; } // IsActive
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string Status { get; set; } // Status (length: 50)
        public string Response { get; set; } // Response
        public string To { get; set; } // To (length: 1000)
        public string Cc { get; set; } // CC (length: 1000)
        public string Bcc { get; set; } // BCC (length: 1000)
        public string Subject { get; set; } // Subject
        public string MessageId { get; set; } // MessageId (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child WorkQueueTokens where [WorkQueueToken].[WorkQueueId] point to this entity (FK_WorkQueueDetail_WorkQueue_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<WorkQueueToken> WorkQueueTokens { get; set; } // WorkQueueToken.FK_WorkQueueDetail_WorkQueue_Id

        // Foreign keys

        /// <summary>
        /// Parent Activity pointed by [WorkQueue].([ActivityId]) (FK_WorkQueue_Activity_Id)
        /// </summary>
        public virtual Activity Activity { get; set; } // FK_WorkQueue_Activity_Id

        /// <summary>
        /// Parent Branch pointed by [WorkQueue].([BranchId]) (FK_WorkQueue_Branch_Id)
        /// </summary>
        public virtual Branch Branch { get; set; } // FK_WorkQueue_Branch_Id

        /// <summary>
        /// Parent Tenant pointed by [WorkQueue].([TenantId]) (FK_WorkQueue_Tenant_Id)
        /// </summary>
        public virtual Tenant Tenant { get; set; } // FK_WorkQueue_Tenant_Id

        public WorkQueue()
        {
            WorkQueueTokens = new System.Collections.Generic.HashSet<WorkQueueToken>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
