// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace TenantConfig.Entity.Models
{
    using System;
    using System.Collections.Generic;

    // AddressInfo
    
    public partial class AddressInfo : URF.Core.EF.Trackable.Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? CountryId { get; set; } // CountryId
        public int? StateId { get; set; } // StateId
        public int? CountyId { get; set; } // CountyId
        public string CityName { get; set; } // CityName (length: 200)
        public int? CityId { get; set; } // CityId
        public string Address1 { get; set; } // Address1 (length: 500)
        public string Address2 { get; set; } // Address2 (length: 500)
        public string ZipPostalCode { get; set; } // ZipPostalCode (length: 50)
        public int? TypeId { get; set; } // TypeId
        public bool IsActive { get; set; } // IsActive
        public int? TenantId { get; set; } // TenantId

        // Reverse navigation

        /// <summary>
        /// Child Branches where [Branch].[AddressInfoId] point to this entity (FK_Branch_AddressInfo_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Branch> Branches { get; set; } // Branch.FK_Branch_AddressInfo_Id
        /// <summary>
        /// Child Contacts where [Contact].[AddressInfoId] point to this entity (FK_Contact_AddressInfo_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Contact> Contacts { get; set; } // Contact.FK_Contact_AddressInfo_Id

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [AddressInfo].([CityId]) (FK_AddressInfo_City_Id)
        /// </summary>
        public virtual City City { get; set; } // FK_AddressInfo_City_Id

        /// <summary>
        /// Parent Country pointed by [AddressInfo].([CountryId]) (FK_AddressInfo_Country_Id)
        /// </summary>
        public virtual Country Country { get; set; } // FK_AddressInfo_Country_Id

        /// <summary>
        /// Parent County pointed by [AddressInfo].([CountyId]) (FK_AddressInfo_County_Id)
        /// </summary>
        public virtual County County { get; set; } // FK_AddressInfo_County_Id

        /// <summary>
        /// Parent State pointed by [AddressInfo].([StateId]) (FK_AddressInfo_State_Id)
        /// </summary>
        public virtual State State { get; set; } // FK_AddressInfo_State_Id

        /// <summary>
        /// Parent Tenant pointed by [AddressInfo].([TenantId]) (FK_AddressInfo_Tenant_Id)
        /// </summary>
        public virtual Tenant Tenant { get; set; } // FK_AddressInfo_Tenant_Id

        public AddressInfo()
        {
            IsActive = true;
            Branches = new System.Collections.Generic.HashSet<Branch>();
            Contacts = new System.Collections.Generic.HashSet<Contact>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
