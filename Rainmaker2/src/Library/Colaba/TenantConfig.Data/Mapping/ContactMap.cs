// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace TenantConfig.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using TenantConfig.Entity.Models;

    // Contact
    
    public partial class ContactMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Contact>
    {
        public void Configure(EntityTypeBuilder<Contact> builder)
        {
            builder.ToTable("Contact", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.MiddleName).HasColumnName(@"MiddleName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.NickName).HasColumnName(@"NickName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Prefix).HasColumnName(@"Prefix").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Suffix).HasColumnName(@"Suffix").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Preferred).HasColumnName(@"Preferred").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Ssn).HasColumnName(@"Ssn").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(256);
            builder.Property(x => x.DobUtc).HasColumnName(@"DobUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.YrsSchool).HasColumnName(@"YrsSchool").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MaritalStatusId).HasColumnName(@"MaritalStatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EthnicityId).HasColumnName(@"EthnicityId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AddressInfoId).HasColumnName(@"AddressInfoId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SurrogateId).HasColumnName(@"SurrogateId").HasColumnType("uniqueidentifier").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.AddressInfo).WithMany(b => b.Contacts).HasForeignKey(c => c.AddressInfoId).OnDelete(DeleteBehavior.SetNull); // FK_Contact_AddressInfo_Id
            builder.HasOne(a => a.Tenant).WithMany(b => b.Contacts).HasForeignKey(c => c.TenantId).OnDelete(DeleteBehavior.SetNull); // FK_Contact_Tenant_Id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
