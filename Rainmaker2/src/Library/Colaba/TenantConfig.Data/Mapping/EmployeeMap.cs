// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace TenantConfig.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using TenantConfig.Entity.Models;

    // Employee
    
    public partial class EmployeeMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Employee>
    {
        public void Configure(EntityTypeBuilder<Employee> builder)
        {
            builder.ToTable("Employee", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.ContactId).HasColumnName(@"ContactId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.HireDateUtc).HasColumnName(@"HireDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LeaveDateUtc).HasColumnName(@"LeaveDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Photo).HasColumnName(@"Photo").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Profile).HasColumnName(@"Profile").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ManagerId).HasColumnName(@"ManagerId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DesignationId).HasColumnName(@"DesignationId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HierarchyLevel).HasColumnName(@"HierarchyLevel").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.NmlsNo).HasColumnName(@"NmlsNo").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.IsLoanOfficer).HasColumnName(@"IsLoanOfficer").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Url).HasColumnName(@"Url").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            builder.HasOne(a => a.Contact).WithOne(b => b.Employee).HasForeignKey<Employee>(c => c.ContactId); // FK_Employee_Contact
            builder.HasOne(a => a.Designation).WithMany(b => b.Employees).HasForeignKey(c => c.DesignationId).OnDelete(DeleteBehavior.SetNull); // FK_Employee_Designation_Id
            builder.HasOne(a => a.Manager).WithMany(b => b.Employees).HasForeignKey(c => c.ManagerId).OnDelete(DeleteBehavior.SetNull); // FK_Employee_Employee_Id
            builder.HasOne(a => a.Tenant).WithMany(b => b.Employees).HasForeignKey(c => c.TenantId).OnDelete(DeleteBehavior.SetNull); // FK_Employee_Tenant_Id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
