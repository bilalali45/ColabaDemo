// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace TenantConfig.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using TenantConfig.Entity.Models;

    // Branch
    
    public partial class BranchMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Branch>
    {
        public void Configure(EntityTypeBuilder<Branch> builder)
        {
            builder.ToTable("Branch", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            builder.Property(x => x.NmlsNo).HasColumnName(@"NmlsNo").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DbaName).HasColumnName(@"DbaName").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.IsCorporate).HasColumnName(@"IsCorporate").HasColumnType("bit").IsRequired();
            builder.Property(x => x.AddressInfoId).HasColumnName(@"AddressInfoId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Logo).HasColumnName(@"Logo").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.FavIcon).HasColumnName(@"FavIcon").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Footer).HasColumnName(@"Footer").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(1000);
            builder.Property(x => x.PrimaryColor).HasColumnName(@"PrimaryColor").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Image).HasColumnName(@"Image").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Url).HasColumnName(@"Url").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            builder.HasOne(a => a.AddressInfo).WithMany(b => b.Branches).HasForeignKey(c => c.AddressInfoId).OnDelete(DeleteBehavior.SetNull); // FK_Branch_AddressInfo_Id
            builder.HasOne(a => a.Tenant).WithMany(b => b.Branches).HasForeignKey(c => c.TenantId).OnDelete(DeleteBehavior.SetNull); // FK_Branch_Tenant
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
