// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // WorkQueue
    
    public partial class WorkQueueMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<WorkQueue>
    {
        public void Configure(EntityTypeBuilder<WorkQueue> builder)
        {
            builder.ToTable("WorkQueue", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.RandomNo).HasColumnName(@"RandomNo").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CampaignId).HasColumnName(@"CampaignId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ActivityTypeId).HasColumnName(@"ActivityTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ActivityId).HasColumnName(@"ActivityId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TemplateId).HasColumnName(@"TemplateId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ScheduleDateUtc).HasColumnName(@"ScheduleDateUtc").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.StartDateUtc).HasColumnName(@"StartDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDateUtc).HasColumnName(@"EndDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Tries).HasColumnName(@"Tries").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuoteResultId).HasColumnName(@"QuoteResultId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PriceIds).HasColumnName(@"PriceIds").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Remarks).HasColumnName(@"Remarks").HasColumnType("varchar(max)").IsRequired(false).IsUnicode(false);
            builder.Property(x => x.LoanRequestId).HasColumnName(@"LoanRequestId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ToAddress).HasColumnName(@"ToAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.CcAddress).HasColumnName(@"CcAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.BccAddress).HasColumnName(@"BccAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.EntityRefTypeId).HasColumnName(@"EntityRefTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EntityRefId).HasColumnName(@"EntityRefId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QueueStatusId).HasColumnName(@"QueueStatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsCustom).HasColumnName(@"IsCustom").HasColumnType("bit").IsRequired();
            builder.Property(x => x.BusinessUnitId).HasColumnName(@"BusinessUnitId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Activity).WithMany(b => b.WorkQueues).HasForeignKey(c => c.ActivityId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_Activity
            builder.HasOne(a => a.ActivityType).WithMany(b => b.WorkQueues).HasForeignKey(c => c.ActivityTypeId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_ActivityType
            builder.HasOne(a => a.BusinessUnit).WithMany(b => b.WorkQueues).HasForeignKey(c => c.BusinessUnitId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_BusinessUnit
            builder.HasOne(a => a.Campaign).WithMany(b => b.WorkQueues).HasForeignKey(c => c.CampaignId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_Campaign
            builder.HasOne(a => a.LoanRequest).WithMany(b => b.WorkQueues).HasForeignKey(c => c.LoanRequestId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_LoanRequest
            builder.HasOne(a => a.QuoteResult).WithMany(b => b.WorkQueues).HasForeignKey(c => c.QuoteResultId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_QuoteResult
            builder.HasOne(a => a.Template).WithMany(b => b.WorkQueues).HasForeignKey(c => c.TemplateId).OnDelete(DeleteBehavior.SetNull); // FK_WorkQueue_Template
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
