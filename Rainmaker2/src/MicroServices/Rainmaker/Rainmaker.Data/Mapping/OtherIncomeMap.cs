// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // OtherIncome
    
    public partial class OtherIncomeMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<OtherIncome>
    {
        public void Configure(EntityTypeBuilder<OtherIncome> builder)
        {
            builder.ToTable("OtherIncome", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.BorrowerId).HasColumnName(@"BorrowerId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IncomeTypeId).HasColumnName(@"IncomeTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MonthlyAmount).HasColumnName(@"MonthlyAmount").HasColumnType("decimal(18,2)").IsRequired(false);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);

            // Foreign keys
            builder.HasOne(a => a.Borrower).WithMany(b => b.OtherIncomes).HasForeignKey(c => c.BorrowerId).OnDelete(DeleteBehavior.SetNull); // FK_OtherIncome_Borrower
            builder.HasOne(a => a.IncomeType).WithMany(b => b.OtherIncomes).HasForeignKey(c => c.IncomeTypeId).OnDelete(DeleteBehavior.SetNull); // FK_OtherIncome_IncomeType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
