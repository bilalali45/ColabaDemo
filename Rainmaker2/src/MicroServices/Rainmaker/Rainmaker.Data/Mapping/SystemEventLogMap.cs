// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // SystemEventLog
    
    public partial class SystemEventLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<SystemEventLog>
    {
        public void Configure(EntityTypeBuilder<SystemEventLog> builder)
        {
            builder.ToTable("SystemEventLog", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.VisitorId).HasColumnName(@"VisitorId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SessionId).HasColumnName(@"SessionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EventTypeId).HasColumnName(@"EventTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ResourceName).HasColumnName(@"ResourceName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Remarks).HasColumnName(@"Remarks").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.LoanRequestId).HasColumnName(@"LoanRequestId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OpportunityId).HasColumnName(@"OpportunityId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SystemEvent).WithMany(b => b.SystemEventLogs).HasForeignKey(c => c.EventTypeId).OnDelete(DeleteBehavior.SetNull); // FK_SystemEventLog_SystemEvent
            builder.HasOne(a => a.UserProfile).WithMany(b => b.SystemEventLogs).HasForeignKey(c => c.UserId).OnDelete(DeleteBehavior.SetNull); // FK_SystemEventLog_UserProfile
            builder.HasOne(a => a.Visitor).WithMany(b => b.SystemEventLogs).HasForeignKey(c => c.VisitorId).OnDelete(DeleteBehavior.SetNull); // FK_SystemEventLog_Visitor
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
