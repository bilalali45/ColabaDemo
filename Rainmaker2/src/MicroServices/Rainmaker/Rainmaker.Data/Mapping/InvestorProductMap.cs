// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // InvestorProduct
    
    public partial class InvestorProductMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<InvestorProduct>
    {
        public void Configure(EntityTypeBuilder<InvestorProduct> builder)
        {
            builder.ToTable("InvestorProduct", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.InvestorId).HasColumnName(@"InvestorId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DtiHousing).HasColumnName(@"DtiHousing").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DtiTotal).HasColumnName(@"DtiTotal").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductDescription).HasColumnName(@"ProductDescription").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);

            // Foreign keys
            builder.HasOne(a => a.Investor).WithMany(b => b.InvestorProducts).HasForeignKey(c => c.InvestorId).OnDelete(DeleteBehavior.SetNull); // FK_InvestorProduct_Investor
            builder.HasOne(a => a.Product).WithMany(b => b.InvestorProducts).HasForeignKey(c => c.ProductId).OnDelete(DeleteBehavior.SetNull); // FK_InvestorProduct_Product
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
