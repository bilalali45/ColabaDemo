// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // LoanDocumentPipeLine
    
    public partial class LoanDocumentPipeLineMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<LoanDocumentPipeLine>
    {
        public void Configure(EntityTypeBuilder<LoanDocumentPipeLine> builder)
        {
            builder.ToTable("LoanDocumentPipeLine", "dbo");
            builder.HasKey(x => x.LoanApplicationId);

            builder.Property(x => x.LoanApplicationId).HasColumnName(@"LoanApplicationId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.DocumentUploadDate).HasColumnName(@"DocumentUploadDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DocumentRequestSentDate).HasColumnName(@"DocumentRequestSentDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DocumentRemaining).HasColumnName(@"DocumentRemaining").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocumentOutstanding).HasColumnName(@"DocumentOutstanding").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocumentCompleted).HasColumnName(@"DocumentCompleted").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.LoanApplication).WithOne(b => b.LoanDocumentPipeLine).HasForeignKey<LoanDocumentPipeLine>(c => c.LoanApplicationId).OnDelete(DeleteBehavior.SetNull); // FK_LoanDocumentPipeLine_LoanApplication
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
