// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // UserResetPasswordLog
    
    public partial class UserResetPasswordLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<UserResetPasswordLog>
    {
        public void Configure(EntityTypeBuilder<UserResetPasswordLog> builder)
        {
            builder.ToTable("UserResetPasswordLog", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.VisitorId).HasColumnName(@"VisitorId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.BusinessUnitId).HasColumnName(@"BusinessUnitId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ChangeType).HasColumnName(@"ChangeType").HasColumnType("int").IsRequired();
            builder.Property(x => x.PasswordFormatId).HasColumnName(@"PasswordFormatId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType("nvarchar(max)").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.BusinessUnit).WithMany(b => b.UserResetPasswordLogs).HasForeignKey(c => c.BusinessUnitId).OnDelete(DeleteBehavior.SetNull); // FK_UserResetPasswordLog_BusinessUnit
            builder.HasOne(a => a.UserProfile).WithMany(b => b.UserResetPasswordLogs).HasForeignKey(c => c.UserId).OnDelete(DeleteBehavior.SetNull); // FK_UserResetPasswordLog_UserProfile
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
