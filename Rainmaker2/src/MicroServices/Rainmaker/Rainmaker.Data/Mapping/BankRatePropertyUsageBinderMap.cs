// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // BankRatePropertyUsageBinder
    
    public partial class BankRatePropertyUsageBinderMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<BankRatePropertyUsageBinder>
    {
        public void Configure(EntityTypeBuilder<BankRatePropertyUsageBinder> builder)
        {
            builder.ToTable("BankRatePropertyUsageBinder", "dbo");
            builder.HasKey(x => new { x.BankRateProductId, x.PropertyUsageId });

            builder.Property(x => x.BankRateProductId).HasColumnName(@"BankRateProductId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.PropertyUsageId).HasColumnName(@"PropertyUsageId").HasColumnType("int").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.BankRateProduct).WithMany(b => b.BankRatePropertyUsageBinders).HasForeignKey(c => c.BankRateProductId).OnDelete(DeleteBehavior.SetNull); // FK_BankRatePropertyUsageBinder_BankRateProduct
            builder.HasOne(a => a.PropertyUsage).WithMany(b => b.BankRatePropertyUsageBinders).HasForeignKey(c => c.PropertyUsageId).OnDelete(DeleteBehavior.SetNull); // FK_BankRatePropertyUsageBinder_PropertyUsage
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
