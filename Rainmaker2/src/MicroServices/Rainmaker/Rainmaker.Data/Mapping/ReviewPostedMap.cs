// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // ReviewPosted
    
    public partial class ReviewPostedMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<ReviewPosted>
    {
        public void Configure(EntityTypeBuilder<ReviewPosted> builder)
        {
            builder.ToTable("ReviewPosted", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.ReviewContactId).HasColumnName(@"ReviewContactId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReviewCommentId).HasColumnName(@"ReviewCommentId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReviewPropertyId).HasColumnName(@"ReviewPropertyId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReviewUrl).HasColumnName(@"ReviewUrl").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.ReviewContact).WithMany(b => b.ReviewPosteds).HasForeignKey(c => c.ReviewContactId).OnDelete(DeleteBehavior.SetNull); // FK_ReviewPosted_ReviewContact
            builder.HasOne(a => a.ReviewProperty).WithMany(b => b.ReviewPosteds).HasForeignKey(c => c.ReviewPropertyId).OnDelete(DeleteBehavior.SetNull); // FK_ReviewPosted_ReviewProperty
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
