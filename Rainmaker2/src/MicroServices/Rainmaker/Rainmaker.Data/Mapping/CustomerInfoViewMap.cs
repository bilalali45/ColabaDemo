// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // CustomerInfoView
    
    public partial class CustomerInfoViewMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<CustomerInfoView>
    {
        public void Configure(EntityTypeBuilder<CustomerInfoView> builder)
        {
            builder.ToTable("CustomerInfoView", "dbo");
            builder.HasKey(x => new { x.Id, x.Prefix, x.FirstName, x.MiddleName, x.LastName, x.Suffix, x.NickName, x.Preferred, x.Phone, x.Email, x.IsActive });

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ContactId).HasColumnName(@"ContactId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Prefix).HasColumnName(@"Prefix").HasColumnType("nvarchar").IsRequired().HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsRequired().HasMaxLength(300).ValueGeneratedNever();
            builder.Property(x => x.MiddleName).HasColumnName(@"MiddleName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsRequired().HasMaxLength(300).ValueGeneratedNever();
            builder.Property(x => x.Suffix).HasColumnName(@"Suffix").HasColumnType("nvarchar").IsRequired().HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.NickName).HasColumnName(@"NickName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.Preferred).HasColumnName(@"Preferred").HasColumnType("nvarchar").IsRequired().HasMaxLength(1000).ValueGeneratedNever();
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar").IsRequired().HasMaxLength(150).ValueGeneratedNever();
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsRequired().HasMaxLength(150).ValueGeneratedNever();
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AllEmail).HasColumnName(@"AllEmail").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AllPhone).HasColumnName(@"AllPhone").HasColumnType("nvarchar(max)").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
