// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Entity.Models
{
    using System;
    using System.Collections.Generic;

    // Recording
    
    public partial class Vortex_Recording : URF.Core.EF.Trackable.Entity
    {
        public int Id { get; set; } // Id
        public string AccountSid { get; set; } // AccountSid (length: 50)
        public string ApiVersion { get; set; } // ApiVersion (length: 50)
        public string CallSid { get; set; } // CallSid (length: 50)
        public string ConferenceSid { get; set; } // ConferenceSid (length: 50)
        public System.DateTime? DateCreatedUtc { get; set; } // DateCreatedUtc
        public System.DateTime? DateUpdatedUtc { get; set; } // DateUpdatedUtc
        public System.DateTime? StartTimeUtc { get; set; } // StartTimeUtc
        public int Duration { get; set; } // Duration
        public string Sid { get; set; } // Sid (Primary key via unique index ) (length: 50)
        public decimal? Price { get; set; } // Price
        public string PriceUnit { get; set; } // PriceUnit (length: 50)
        public string Status { get; set; } // Status (length: 50)
        public int? Channels { get; set; } // Channels
        public string Source { get; set; } // Source (length: 50)
        public int? ErrorCode { get; set; } // ErrorCode
        public string Uri { get; set; } // Uri (length: 2048)
        public string EncryptionDetails { get; set; } // EncryptionDetails (length: 50)
        public string SubresourceUrisAddOnResults { get; set; } // SubresourceUrisAddOnResults (length: 2048)
        public string SubresourceUrisTranscriptions { get; set; } // SubresourceUrisTranscriptions (length: 2048)
        public bool RecordingFileDownloaded { get; set; } // RecordingFileDownloaded
        public string RecordingFileDownloadStatus { get; set; } // RecordingFileDownloadStatus (length: 50)
        public string RecordingFileDownloadMessage { get; set; } // RecordingFileDownloadMessage
        public bool? IsDeletedFromServer { get; set; } // IsDeletedFromServer

        // Reverse navigation

        /// <summary>
        /// Child Vortex_VoiceMailAssignments where [VoiceMailAssignment].[RecordingSid] point to this entity (FK_VoiceMailAssignment_Recording)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Vortex_VoiceMailAssignment> Vortex_VoiceMailAssignments { get; set; } // VoiceMailAssignment.FK_VoiceMailAssignment_Recording
        /// <summary>
        /// Child Vortex_VoiceMailReadBies where [VoiceMailReadBy].[RecordingSid] point to this entity (FK_VoiceMailReadBy_Recording)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Vortex_VoiceMailReadBy> Vortex_VoiceMailReadBies { get; set; } // VoiceMailReadBy.FK_VoiceMailReadBy_Recording

        // Foreign keys

        /// <summary>
        /// Parent Vortex_CallLog pointed by [Recording].([CallSid]) (FK_Recording_CallLog)
        /// </summary>
        public virtual Vortex_CallLog Vortex_CallLog { get; set; } // FK_Recording_CallLog

        public Vortex_Recording()
        {
            RecordingFileDownloaded = false;
            Vortex_VoiceMailAssignments = new System.Collections.Generic.HashSet<Vortex_VoiceMailAssignment>();
            Vortex_VoiceMailReadBies = new System.Collections.Generic.HashSet<Vortex_VoiceMailReadBy>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
