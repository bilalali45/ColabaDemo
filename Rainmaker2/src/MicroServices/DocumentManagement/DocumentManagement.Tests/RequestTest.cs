using Microsoft.AspNetCore.Http;
using Moq;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Net;
using System.Net.Http;
using System.Security.Claims;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using DocumentManagement.API.Controllers;
using DocumentManagement.Entity;
using DocumentManagement.Model;
using DocumentManagement.Service;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Controllers;
using Microsoft.CodeAnalysis;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using MongoDB.Bson;
using MongoDB.Driver;
using Moq.Protected;
using Xunit;
using LoanApplication = DocumentManagement.Model.LoanApplication;

namespace DocumentManagement.Tests
{
    public class RequestTest
    {
        [Fact]
        public async Task TestSaveControllerTrue()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            Mock<IRainmakerService> mockRainMock = new Mock<IRainmakerService>();
            mock.Setup(x => x.Save(It.IsAny<Model.LoanApplication>(), It.IsAny<bool>())).ReturnsAsync(true);
            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("UserProfileId")).Returns(new Claim("UserProfileId", "1"));
            httpContext.Setup(m => m.User.FindFirst("FirstName")).Returns(new Claim("FirstName", "Danish"));
            httpContext.Setup(m => m.User.FindFirst("LastName")).Returns(new Claim("LastName", "Faiz"));
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));
            httpContext.SetupGet(x => x.Connection.RemoteIpAddress).Returns(IPAddress.Parse("127.0.0.1"));

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));
            mockRainMock.Setup(x => x.PostLoanApplication(It.IsAny<int>(),It.IsAny<bool>(), It.IsAny<IEnumerable<string>>())).ReturnsAsync("{userId:59,userName:'Melissa Merritt'}");

            var request = new Mock<HttpRequest>();

            request.SetupGet(x => x.Headers["Authorization"]).Returns(
                new StringValues("Test")
                );

            httpContext.SetupGet(x => x.Request).Returns(request.Object);

            var controller = new RequestController(mock.Object, mockRainMock.Object);

            controller.ControllerContext = context;

            //Act
            LoanApplication loanApplication = new LoanApplication();
            loanApplication.id = "5f0e8d014e72f52edcff3885";
            loanApplication.loanApplicationId = 14;
            loanApplication.tenantId = 1;
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.requests = new List<Model.Request>();

            Model.Request requestModel = new Model.Request();
            requestModel.id = "5f0ede3cce9c4b62509d0dc0";
            requestModel.userId = 3842;
            requestModel.userName = "Danish Faiz";
            requestModel.message = "Hi Mark";
            requestModel.createdOn = DateTime.UtcNow;
            requestModel.status = DocumentStatus.BorrowerTodo;
            requestModel.documents = new List<Model.RequestDocument>();

            Model.RequestDocument document = new Model.RequestDocument();
            document.id = "5f0ede3cce9c4b62509d0dc1";
            document.status = DocumentStatus.BorrowerTodo;
            document.typeId = "5eb257a3e519051af2eeb624";
            document.displayName = "W2 2020";
            document.message = "please upload salary slip";
            document.files = new List<Model.RequestFile>();

            Model.RequestFile requestFile = new Model.RequestFile();
            requestFile.id = "abc15d1fe456051af2eeb768";
            requestFile.clientName = "3e06ed7f-0620-42f2-b6f5-e7b8ee1f2778.pdf";
            requestFile.serverName = "0c550bb7-7e4b-4384-98eb-5264d9411737.enc";
            requestFile.fileUploadedOn = DateTime.UtcNow;
            requestFile.size = 1904942;
            requestFile.encryptionKey = "FileKey";
            requestFile.encryptionAlgorithm = "AES";
            requestFile.order = 0;
            requestFile.mcuName = "abc";
            requestFile.contentType = "application/pdf";
            requestFile.status = FileStatus.SubmittedToMcu;
            requestFile.byteProStatus = "Active";

            document.files.Add(requestFile);

            requestModel.documents.Add(document);

            loanApplication.requests.Add(requestModel);

            IActionResult result = await controller.Save(loanApplication,false);

            //Assert
            Assert.NotNull(result);
            Assert.IsType<OkResult>(result);
        }

        [Fact]
        public async Task TestSaveControllerFalse()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            Mock<IRainmakerService> mockRainMock = new Mock<IRainmakerService>();
            mock.Setup(x => x.Save(It.IsAny<Model.LoanApplication>(), It.IsAny<bool>())).ReturnsAsync(false);
            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("UserProfileId")).Returns(new Claim("UserProfileId", "1"));
            httpContext.Setup(m => m.User.FindFirst("FirstName")).Returns(new Claim("FirstName", "Danish"));
            httpContext.Setup(m => m.User.FindFirst("LastName")).Returns(new Claim("LastName", "Faiz"));
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));
            httpContext.SetupGet(x => x.Connection.RemoteIpAddress).Returns(IPAddress.Parse("127.0.0.1"));

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));
            mockRainMock.Setup(x => x.PostLoanApplication(It.IsAny<int>(), It.IsAny<bool>(), It.IsAny<IEnumerable<string>>())).ReturnsAsync("");

            var request = new Mock<HttpRequest>();

            request.SetupGet(x => x.Headers["Authorization"]).Returns(
                new StringValues("Test")
                );

            httpContext.SetupGet(x => x.Request).Returns(request.Object);

            var controller = new RequestController(mock.Object, mockRainMock.Object);

            controller.ControllerContext = context;

            //Act
            LoanApplication loanApplication = new LoanApplication();
            loanApplication.id = "5f0e8d014e72f52edcff3885";
            loanApplication.loanApplicationId = 14;
            loanApplication.tenantId = 1;
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.requests = new List<Model.Request>();

            Model.Request requestModel = new Model.Request();
            requestModel.id = "5f0ede3cce9c4b62509d0dc0";
            requestModel.userId = 3842;
            requestModel.userName = "Danish Faiz";
            requestModel.message = "Hi Mark";
            requestModel.createdOn = DateTime.UtcNow;
            requestModel.status = DocumentStatus.BorrowerTodo;
            requestModel.documents = new List<Model.RequestDocument>();

            Model.RequestDocument document = new Model.RequestDocument();
            document.id = "5f0ede3cce9c4b62509d0dc1";
            document.status = DocumentStatus.BorrowerTodo;
            document.typeId = "5eb257a3e519051af2eeb624";
            document.displayName = "W2 2020";
            document.message = "please upload salary slip";
            document.files = new List<Model.RequestFile>();

            Model.RequestFile requestFile = new Model.RequestFile();
            requestFile.id = "abc15d1fe456051af2eeb768";
            requestFile.clientName = "3e06ed7f-0620-42f2-b6f5-e7b8ee1f2778.pdf";
            requestFile.serverName = "0c550bb7-7e4b-4384-98eb-5264d9411737.enc";
            requestFile.fileUploadedOn = DateTime.UtcNow;
            requestFile.size = 1904942;
            requestFile.encryptionKey = "FileKey";
            requestFile.encryptionAlgorithm = "AES";
            requestFile.order = 0;
            requestFile.mcuName = "abc";
            requestFile.contentType = "application/pdf";
            requestFile.status = FileStatus.SubmittedToMcu;
            requestFile.byteProStatus = "Active";

            document.files.Add(requestFile);

            requestModel.documents.Add(document);

            loanApplication.requests.Add(requestModel);

            IActionResult result = await controller.Save(loanApplication, false);

            //Assert
            Assert.NotNull(result);
            Assert.IsType<NotFoundResult>(result);
        }

        [Fact]
        public async Task TestSaveServiceTypeIdNotNull()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ffa5cba6f754a10129586"}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.SetupGet(x => x.Current).Returns(listRequest);

            mockCollectionRequest.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);


            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object,null,null,null,null,null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 14;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "W2 2020";
            requestDocument.message = "document rejected";
            requestDocument.typeId = "5eb257a3e519051af2eeb624";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, false);

            //Assert
            Assert.True(result);

        }

        [Fact]
        public async Task TestSaveServiceTypeIdNull()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ffa5cba6f754a10129586"}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.SetupGet(x => x.Current).Returns(listRequest);

            mockCollectionRequest.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);


            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("LoanApplication", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object, null, null, null, null, null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 14;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "W2 2020";
            requestDocument.message = "document rejected";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, false);

            //Assert
            Assert.True(result);
        }

        [Fact]
        public async Task TestSaveService()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorDraftDocument = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listDocumentDraft = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "docId" , "5f2147136621531660dc42c23"},
                    { "requestId" , "5f2147116621531660dc42bf"}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ffa5cba6f754a10129586"}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.Setup(x => x.Current).Returns(listRequest);

            mockCursorDraftDocument.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorDraftDocument.Setup(x => x.Current).Returns(listDocumentDraft);

            mockCollectionRequest.SetupSequence(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object).Returns(mockCursorDraftDocument.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);

            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object, null, null, null, null, null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 1;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "";
            requestDocument.message = "document rejected";
            requestDocument.typeId = "5eb257a3e519051af2eeb624";
            requestDocument.docId = "5f2147136621531660dc42c2";
            requestDocument.requestId = "5f2147116621531660dc42bf";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, false);

            //Assert
            Assert.True(result);

        }

        [Fact]
        public async Task TestSaveServiceIsDraftFalse()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorDraftDocument = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listDocumentDraft = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "docId" , "5f2147136621531660dc42c23"},
                    { "requestId" , "5f2147116621531660dc42bf"}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ffa5cba6f754a10129586"}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.Setup(x => x.Current).Returns(listRequest);

            mockCursorDraftDocument.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorDraftDocument.Setup(x => x.Current).Returns(listDocumentDraft);

            mockCollectionRequest.SetupSequence(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object).Returns(mockCursorDraftDocument.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);

            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object, null, null, null, null, null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 1;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "";
            requestDocument.message = "document rejected";
            //requestDocument.typeId = "5eb257a3e519051af2eeb624";
            requestDocument.docId = "5f2147136621531660dc42c2";
            requestDocument.requestId = "5f2147116621531660dc42bf";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, false);

            //Assert
            Assert.True(result);

        }

        [Fact]
        public async Task TestSaveServiceIsDraftTrue()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ffa5cba6f754a10129586"}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.SetupGet(x => x.Current).Returns(listRequest);

            mockCollectionRequest.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);


            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object, null, null, null, null, null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 1;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "";
            requestDocument.message = "document rejected";
            requestDocument.typeId = "5eb257a3e519051af2eeb624";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, true);

            //Assert
            Assert.True(result);

        }

        [Fact]
        public async Task TestSaveServiceActivityIdNull()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IActivityLogService> mockActivityLogService = new Mock<IActivityLogService>();
            Mock<IActivityLogService> mockIActivityLogService = new Mock<IActivityLogService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<StatusList>> mockCollectionStatusList = new Mock<IMongoCollection<StatusList>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorStatusList = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Entity.LoanApplication>> mockLoanApplicationCollection = new Mock<IMongoCollection<Entity.LoanApplication>>();
            Mock<IMongoCollection<ActivityLog>> mockCollectionActivityLog = new Mock<IMongoCollection<ActivityLog>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorActivityLog = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> statusList = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5ee86503305e33a11c51ebbc"}
                }
            };

            List<BsonDocument> listRequest = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , "5f0ede3cce9c4b62509d0dbf"},
                    { "loanApplicationId" , 14}
                }
            };

            List<BsonDocument> listActivityLog = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "_id" , BsonString.Empty}
                }
            };

            mockCursorStatusList.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorStatusList.SetupGet(x => x.Current).Returns(statusList);

            mockCollectionStatusList.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.StatusList, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorStatusList.Object);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.SetupGet(x => x.Current).Returns(listRequest);

            mockCollectionRequest.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object);

            mockLoanApplicationCollection.Setup(s => s.InsertOneAsync(It.IsAny<Entity.LoanApplication>(), It.IsAny<InsertOneOptions>(), It.IsAny<System.Threading.CancellationToken>()));

            mockCursorActivityLog.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorActivityLog.SetupGet(x => x.Current).Returns(listActivityLog);

            mockCollectionActivityLog.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.ActivityLog, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorActivityLog.Object);


            mockdb.Setup(x => x.GetCollection<StatusList>("StatusList", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionStatusList.Object);
            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);
            mockdb.Setup(x => x.GetCollection<Entity.LoanApplication>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockLoanApplicationCollection.Object);
            mockdb.Setup(x => x.GetCollection<ActivityLog>("ActivityLog", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionActivityLog.Object);

            mock.Setup(x => x.db).Returns(mockdb.Object);

            //Act
            IRequestService service = new RequestService(mock.Object, mockActivityLogService.Object, null, null, null, null, null);

            Model.LoanApplication loanApplication = new Model.LoanApplication();
            loanApplication.userId = 59;
            loanApplication.userName = "Melissa Merritt";
            loanApplication.loanApplicationId = 1;
            loanApplication.tenantId = 1;
            loanApplication.status = "5ee86503305e33a11c51ebbc";
            loanApplication.requests = new List<Model.Request>() { };

            Model.Request request = new Model.Request();
            request.userId = 3842;
            request.userName = "Danish Faiz";
            request.message = "Hi Mark";
            request.documents = new List<Model.RequestDocument>() { };

            Model.RequestDocument requestDocument = new Model.RequestDocument();
            requestDocument.status = "Started";
            requestDocument.displayName = "";
            requestDocument.message = "document rejected";
            requestDocument.typeId = "5eb257a3e519051af2eeb624";
            requestDocument.files = new List<Model.RequestFile>() { };

            request.documents.Add(requestDocument);

            loanApplication.requests.Add(request);

            bool result = await service.Save(loanApplication, false);

            //Assert
            Assert.True(result);

        }

        [Fact]
        public async Task TestGetDraftController()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            List<DraftDocumentDTO> list = new List<DraftDocumentDTO>() { { new DraftDocumentDTO()
            {
                message = "Hi Mark",
                typeId = "5ebc18cba5d847268075ad4f",
                docId = "5f2155194ce1db1a7cdb17e9",
                requestId = "5f2155194ce1db1a7cdb17e8",
                docName = "W3 2020",
                docMessage = "please upload salary slip"
            } } };

            GetDraft getDraft = new GetDraft();
            getDraft.loanApplicationId = 14;

            mock.Setup(x => x.GetDraft(It.IsAny<int>(), It.IsAny<int>())).ReturnsAsync(list);

            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));

            var controller = new RequestController(mock.Object, null);

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));

            controller.ControllerContext = context;

            //Act
            IActionResult result = await controller.GetDraft(getDraft);
            //Assert
            Assert.NotNull(result);
            Assert.IsType<OkObjectResult>(result);
            var content = (result as OkObjectResult).Value as List<DraftDocumentDTO>;
            Assert.Single(content);
            Assert.Equal("Hi Mark", content[0].message);
            Assert.Equal("5ebc18cba5d847268075ad4f", content[0].typeId);
            Assert.Equal("5f2155194ce1db1a7cdb17e8", content[0].requestId);
            Assert.Equal("5f2155194ce1db1a7cdb17e9", content[0].docId);
            Assert.Equal("W3 2020", content[0].docName);
            Assert.Equal("please upload salary slip", content[0].docMessage);
        }

        [Fact]
        public async Task TestGetDraftService()
        {
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IMongoCollection<Entity.Request>> mockCollectionRequest = new Mock<IMongoCollection<Entity.Request>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequest = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IAsyncCursor<BsonDocument>> mockCursorRequestDraft = new Mock<IAsyncCursor<BsonDocument>>();

            List<BsonDocument> listDocumentDraft = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "message" , BsonString.Empty},
                    { "typeId" , BsonString.Empty},
                    { "docId" , BsonString.Empty},
                    { "requestId" , BsonString.Empty},
                    { "docName" , BsonString.Empty},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , BsonString.Empty},
                    { "typeMessage" , BsonString.Empty},
                    { "messages" , BsonArray.Create(new Message[]{ })}
                }
                ,new BsonDocument
                {
                    { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "docId" , "5f2155194ce1db1a7cdb17e9"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , "please upload salary slip"},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                    { "messages" , BsonArray.Create(new Message[]{ })}
                }
                 ,new BsonDocument
                {
                    { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "docId" , "5f2155194ce1db1a7cdb17e9"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                    { "messages" , BsonArray.Create(new BsonDocument[]{ new BsonDocument() { { "tenantId", 1 },{ "message", "Credit report has been uploaded" } } })}
                }
                 ,new BsonDocument
                {
                    { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "docId" , "5f2155194ce1db1a7cdb17e9"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                    { "messages" , BsonNull.Value }
                }
            };

            List<BsonDocument> listRequestDraft = new List<BsonDocument>()
            {
                new BsonDocument
                {
                    { "message" , BsonString.Empty},
                    { "typeId" , BsonString.Empty},
                    { "docId" , BsonString.Empty},
                    { "requestId" , BsonString.Empty},
                    { "docName" , BsonString.Empty},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , BsonString.Empty},
                    { "typeMessage" , BsonString.Empty},
                    { "messages" , BsonArray.Create(new Message[]{ })}
                }
                ,new BsonDocument
                {
                   { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , "please upload salary slip"},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                     { "messages" , BsonArray.Create(new Message[]{ })}
                }
                 ,new BsonDocument
                {
                    { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "docId" , "5f2155194ce1db1a7cdb17e9"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                    { "messages" , BsonArray.Create(new BsonDocument[]{ new BsonDocument() { { "tenantId", 1 },{ "message", "Credit report has been uploaded" } } })}
                }
                 ,new BsonDocument
                {
                    { "message" , "Hi Mark"},
                    { "typeId" , "5ebc18cba5d847268075ad4f"},
                    { "docId" , "5f2155194ce1db1a7cdb17e9"},
                    { "requestId" , "5f2155194ce1db1a7cdb17e8"},
                    { "docName" , "W3 2020"},
                    { "docMessage" , BsonString.Empty},
                    { "typeName" , "Salary Slip"},
                    { "typeMessage" , "Credit report has been uploaded"},
                    { "messages" , BsonNull.Value }
                }
            };

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.Setup(x => x.Current).Returns(listDocumentDraft);

            mockCursorRequest.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequest.Setup(x => x.Current).Returns(listDocumentDraft);

            mockCursorRequestDraft.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true).ReturnsAsync(false);
            mockCursorRequestDraft.Setup(x => x.Current).Returns(listRequestDraft);

            mockCollectionRequest.SetupSequence(x => x.Aggregate(It.IsAny<PipelineDefinition<Entity.Request, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursorRequest.Object).Returns(mockCursorRequestDraft.Object);

            mockdb.Setup(x => x.GetCollection<Entity.Request>("Request", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionRequest.Object);

            mock.SetupGet(x => x.db).Returns(mockdb.Object);

            var service = new RequestService(mock.Object, null, null, null, null, null, null);

            //Act
            List<DraftDocumentDTO> dto = await service.GetDraft(14, 1);

            //Assert
            Assert.NotNull(dto);
            Assert.Equal(8, dto.Count);
            Assert.Equal("", dto[0].docMessage);
            Assert.Equal("please upload salary slip", dto[1].docMessage);
            Assert.Equal("Credit report has been uploaded", dto[2].docMessage);
            Assert.Equal("Credit report has been uploaded", dto[3].docMessage);
            Assert.Equal("", dto[4].docMessage);
            Assert.Equal("please upload salary slip", dto[5].docMessage);
            Assert.Equal("Credit report has been uploaded", dto[6].docMessage);
            Assert.Equal("Credit report has been uploaded", dto[7].docMessage);
        }

        [Fact]
        public async Task TestGetEmailTemplateController()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();

            mock.Setup(x => x.GetEmailTemplate(It.IsAny<int>())).ReturnsAsync("Email Template");

            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));

            var controller = new RequestController(mock.Object, null);

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));

            controller.ControllerContext = context;

            //Act
            IActionResult result = await controller.GetEmailTemplate();
            //Assert
            Assert.NotNull(result);
            Assert.IsType<OkObjectResult>(result);
            var content = (result as OkObjectResult).Value as string;
        }

        [Fact]
        public async Task TestGetEmailTemplateServiceTrue()
        {
            //Arrange
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IAsyncCursor<BsonDocument>> mockCursor = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Tenant>> mockCollectionEmailTemplate = new Mock<IMongoCollection<Tenant>>();

            List<BsonDocument> emailTemplate = new List<BsonDocument>()
            {
                new BsonDocument
                 {
                        { "emailTemplate" , "Email Template"}
                 }
                };

            mockCursor.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(true);
            mockCursor.SetupGet(x => x.Current).Returns(emailTemplate);

            mockCollectionEmailTemplate.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Tenant, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursor.Object);

            mockdb.Setup(x => x.GetCollection<Tenant>("Tenant", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionEmailTemplate.Object);

            mock.SetupGet(x => x.db).Returns(mockdb.Object);

            var service = new RequestService(mock.Object, null, null, null, null, null, null);
            //Act
            string dto = await service.GetEmailTemplate(1);
            //Assert
            Assert.NotNull(dto);
            Assert.Equal("Email Template", dto);
        }

        [Fact]
        public async Task TestGetEmailTemplateServiceFalse()
        {
            //Arrange
            Mock<IMongoService> mock = new Mock<IMongoService>();
            Mock<IMongoDatabase> mockdb = new Mock<IMongoDatabase>();
            Mock<IAsyncCursor<BsonDocument>> mockCursor = new Mock<IAsyncCursor<BsonDocument>>();
            Mock<IMongoCollection<Tenant>> mockCollectionEmailTemplate = new Mock<IMongoCollection<Tenant>>();

            List<BsonDocument> emailTemplate = new List<BsonDocument>()
            {
                new BsonDocument
                 {
                        { "emailTemplate" , "Email Template"}
                 }
                };

            mockCursor.SetupSequence(x => x.MoveNextAsync(It.IsAny<System.Threading.CancellationToken>())).ReturnsAsync(false);
            mockCursor.SetupGet(x => x.Current).Returns(emailTemplate);

            mockCollectionEmailTemplate.Setup(x => x.Aggregate(It.IsAny<PipelineDefinition<Tenant, BsonDocument>>(), It.IsAny<AggregateOptions>(), It.IsAny<CancellationToken>())).Returns(mockCursor.Object);

            mockdb.Setup(x => x.GetCollection<Tenant>("Tenant", It.IsAny<MongoCollectionSettings>())).Returns(mockCollectionEmailTemplate.Object);

            mock.SetupGet(x => x.db).Returns(mockdb.Object);

            var service = new RequestService(mock.Object, null, null, null, null, null, null);
            //Act
            string dto = await service.GetEmailTemplate(1);
            //Assert
            Assert.NotNull(dto);
            Assert.Equal(string.Empty, dto);
        }

        [Fact]
        public async Task TestUploadFileControllerTrue()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            Mock<IRainmakerService> mockRainMock = new Mock<IRainmakerService>();
            mock.Setup(x => x.UploadFile(It.IsAny<int>(), It.IsAny<string>(), It.IsAny<int>(), It.IsAny<int>(), It.IsAny<string>(), It.IsAny<Model.UploadFileModel>())).ReturnsAsync("5f30d944ccbf4475dcdfed33");
            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("UserProfileId")).Returns(new Claim("UserProfileId", "1"));
            httpContext.Setup(m => m.User.FindFirst("FirstName")).Returns(new Claim("FirstName", "Danish"));
            httpContext.Setup(m => m.User.FindFirst("LastName")).Returns(new Claim("LastName", "Faiz"));
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));
            httpContext.SetupGet(x => x.Connection.RemoteIpAddress).Returns(IPAddress.Parse("127.0.0.1"));

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));
            mockRainMock.Setup(x => x.PostLoanApplication(It.IsAny<int>(), It.IsAny<bool>(), It.IsAny<IEnumerable<string>>())).ReturnsAsync("{userId:59,userName:'Melissa Merritt'}");

            var request = new Mock<HttpRequest>();

            request.SetupGet(x => x.Headers["Authorization"]).Returns(
                new StringValues("Test")
                );

            httpContext.SetupGet(x => x.Request).Returns(request.Object);

            var controller = new RequestController(mock.Object, mockRainMock.Object);

            controller.ControllerContext = context;

            UploadFileModel uploadFileModel = new UploadFileModel();
            uploadFileModel.loanApplicationId = 14;
            uploadFileModel.documentType = "Salary Slip";
            uploadFileModel.fileName = "test.jpg";
            uploadFileModel.fileData = "";

            IActionResult result = await controller.UploadFile(uploadFileModel);

            //Assert
            Assert.NotNull(result);
            Assert.IsType<OkObjectResult>(result);


        }

        [Fact]
        public async Task TestUploadFileControllerFalse()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            Mock<IRainmakerService> mockRainMock = new Mock<IRainmakerService>();
            mock.Setup(x => x.UploadFile(It.IsAny<int>(), It.IsAny<string>(), It.IsAny<int>(), It.IsAny<int>(), It.IsAny<string>(), It.IsAny<Model.UploadFileModel>())).ReturnsAsync("");
            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("UserProfileId")).Returns(new Claim("UserProfileId", "1"));
            httpContext.Setup(m => m.User.FindFirst("FirstName")).Returns(new Claim("FirstName", "Danish"));
            httpContext.Setup(m => m.User.FindFirst("LastName")).Returns(new Claim("LastName", "Faiz"));
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));
            httpContext.SetupGet(x => x.Connection.RemoteIpAddress).Returns(IPAddress.Parse("127.0.0.1"));

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));
            mockRainMock.Setup(x => x.PostLoanApplication(It.IsAny<int>(), It.IsAny<bool>(), It.IsAny<IEnumerable<string>>())).ReturnsAsync("");

            var request = new Mock<HttpRequest>();

            request.SetupGet(x => x.Headers["Authorization"]).Returns(
                new StringValues("Test")
                );

            httpContext.SetupGet(x => x.Request).Returns(request.Object);

            var controller = new RequestController(mock.Object, mockRainMock.Object);

            controller.ControllerContext = context;

            UploadFileModel uploadFileModel = new UploadFileModel();
            uploadFileModel.loanApplicationId = 14;
            uploadFileModel.documentType = "Salary Slip";
            uploadFileModel.fileName = "test.jpg";
            uploadFileModel.fileData = "";

            IActionResult result = await controller.UploadFile(uploadFileModel);

            //Assert
            Assert.NotNull(result);
            Assert.IsType<NotFoundResult>(result);

        }

        [Fact]
        public async Task TestUploadFileControllerBadRequest()
        {
            //Arrange
            Mock<IRequestService> mock = new Mock<IRequestService>();
            Mock<IRainmakerService> mockRainMock = new Mock<IRainmakerService>();
            mock.Setup(x => x.UploadFile(It.IsAny<int>(), It.IsAny<string>(), It.IsAny<int>(), It.IsAny<int>(), It.IsAny<string>(), It.IsAny<Model.UploadFileModel>())).ReturnsAsync("");
            var httpContext = new Mock<HttpContext>();
            httpContext.Setup(m => m.User.FindFirst("UserProfileId")).Returns(new Claim("UserProfileId", "1"));
            httpContext.Setup(m => m.User.FindFirst("FirstName")).Returns(new Claim("FirstName", "Danish"));
            httpContext.Setup(m => m.User.FindFirst("LastName")).Returns(new Claim("LastName", "Faiz"));
            httpContext.Setup(m => m.User.FindFirst("TenantId")).Returns(new Claim("TenantId", "1"));
            httpContext.SetupGet(x => x.Connection.RemoteIpAddress).Returns(IPAddress.Parse("127.0.0.1"));

            var context = new ControllerContext(new ActionContext(httpContext.Object, new Microsoft.AspNetCore.Routing.RouteData(), new ControllerActionDescriptor()));
            mockRainMock.Setup(x => x.PostLoanApplication(It.IsAny<int>(), It.IsAny<bool>(), It.IsAny<IEnumerable<string>>())).ReturnsAsync("{userId:59,userName:'Melissa Merritt'}");

            var request = new Mock<HttpRequest>();

            request.SetupGet(x => x.Headers["Authorization"]).Returns(
                new StringValues("Test")
                );

            httpContext.SetupGet(x => x.Request).Returns(request.Object);

            var controller = new RequestController(mock.Object, mockRainMock.Object);

            controller.ControllerContext = context;

            UploadFileModel uploadFileModel = new UploadFileModel();
            uploadFileModel.loanApplicationId = 14;
            uploadFileModel.documentType = "Salary Slip";
            uploadFileModel.fileName = "test.jpg";
            uploadFileModel.fileData = "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";

            IActionResult result = await controller.UploadFile(uploadFileModel);

            //Assert
            Assert.NotNull(result);
            Assert.IsType<BadRequestResult>(result);


        }
    }
}
