// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace LoanApplicationDb.Data.Mapping
{
    using LoanApplicationDb.Entity.Models;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;

    // OtherIncomeInfo
    
    public partial class OtherIncomeInfoMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<OtherIncomeInfo>
    {
        public void Configure(EntityTypeBuilder<OtherIncomeInfo> builder)
        {
            builder.ToTable("OtherIncomeInfo", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.IncomeInfoId).HasColumnName(@"IncomeInfoId").HasColumnType("int").IsRequired();
            builder.Property(x => x.OtherIncomeTypeId).HasColumnName(@"OtherIncomeTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.MonthlyIncome).HasColumnName(@"MonthlyIncome").HasColumnType("decimal(18,0)").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AnnualIncome).HasColumnName(@"AnnualIncome").HasColumnType("decimal(18,0)").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.IncomeInfo).WithMany(b => b.OtherIncomeInfoes).HasForeignKey(c => c.IncomeInfoId).OnDelete(DeleteBehavior.SetNull); // FK_OtherEmploymentIncome_EmploymentInfo
            builder.HasOne(a => a.OtherIncomeType).WithMany(b => b.OtherIncomeInfoes).HasForeignKey(c => c.OtherIncomeTypeId).OnDelete(DeleteBehavior.SetNull); // FK_OtherEmploymentIncome_OtherEmploymentIncomeType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
