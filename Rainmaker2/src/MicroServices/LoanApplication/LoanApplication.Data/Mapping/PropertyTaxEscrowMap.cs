// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace LoanApplicationDb.Data.Mapping
{
    using LoanApplicationDb.Entity.Models;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;

    // PropertyTaxEscrow
    
    public partial class PropertyTaxEscrowMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<PropertyTaxEscrow>
    {
        public void Configure(EntityTypeBuilder<PropertyTaxEscrow> builder)
        {
            builder.ToTable("PropertyTaxEscrow", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.PaidById).HasColumnName(@"PaidById").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PropertyDetailId).HasColumnName(@"PropertyDetailId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AnnuallyPayment).HasColumnName(@"AnnuallyPayment").HasColumnType("decimal(18,2)").IsRequired();
            builder.Property(x => x.EscrowMonth).HasColumnName(@"EscrowMonth").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EscrowEntityTypeId).HasColumnName(@"EscrowEntityTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PrePaid).HasColumnName(@"PrePaid").HasColumnType("decimal(18,2)").IsRequired(false);
            builder.Property(x => x.PrePaidMonth).HasColumnName(@"PrePaidMonth").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IncludedInMortgagePayment).HasColumnName(@"IncludedInMortgagePayment").HasColumnType("bit").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.EscrowEntityType).WithMany(b => b.PropertyTaxEscrows).HasForeignKey(c => c.EscrowEntityTypeId).OnDelete(DeleteBehavior.SetNull); // FK_PropertyTaxEscrow_EscrowEntityType
            builder.HasOne(a => a.PaidBy).WithMany(b => b.PropertyTaxEscrows).HasForeignKey(c => c.PaidById).OnDelete(DeleteBehavior.SetNull); // FK_PropertyTaxEscrow_PaidBy
            builder.HasOne(a => a.PropertyInfo).WithMany(b => b.PropertyTaxEscrows).HasForeignKey(c => c.PropertyDetailId).OnDelete(DeleteBehavior.SetNull); // FK_PropertyTaxEscrow_PropertyInfo
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
