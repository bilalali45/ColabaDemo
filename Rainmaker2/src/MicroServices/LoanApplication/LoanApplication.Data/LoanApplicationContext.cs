// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace LoanApplicationDb.Data
{
    using LoanApplicationDb.Data.Mapping;
    using LoanApplicationDb.Entity.Models;
    using Microsoft.EntityFrameworkCore;


    
    public partial class LoanApplicationContext : DbContext
    {
        //public virtual DbSet<AddressInfo> AddressInfoes { get; set; } // AddressInfo
        //public virtual DbSet<AssetBorrowerBinder> AssetBorrowerBinders { get; set; } // AssetBorrowerBinder
        //public virtual DbSet<AssetCategory> AssetCategories { get; set; } // AssetCategory
        //public virtual DbSet<AssetType> AssetTypes { get; set; } // AssetType
        //public virtual DbSet<AssetTypeGiftSourceBinder> AssetTypeGiftSourceBinders { get; set; } // AssetTypeGiftSourceBinder
        //public virtual DbSet<BankRuptcy> BankRuptcies { get; set; } // BankRuptcy
        //public virtual DbSet<Borrower> Borrowers { get; set; } // Borrower
        //public virtual DbSet<BorrowerAsset> BorrowerAssets { get; set; } // BorrowerAsset
        //public virtual DbSet<BorrowerBankRuptcy> BorrowerBankRuptcies { get; set; } // BorrowerBankRuptcy
        //public virtual DbSet<BorrowerConsent> BorrowerConsents { get; set; } // BorrowerConsent
        //public virtual DbSet<BorrowerLiability> BorrowerLiabilities { get; set; } // BorrowerLiability
        //public virtual DbSet<BorrowerProperty> BorrowerProperties { get; set; } // BorrowerProperty
        //public virtual DbSet<BorrowerQuestionResponse> BorrowerQuestionResponses { get; set; } // BorrowerQuestionResponse
        //public virtual DbSet<BorrowerResidence> BorrowerResidences { get; set; } // BorrowerResidence
        //public virtual DbSet<BorrowerSupportPayment> BorrowerSupportPayments { get; set; } // BorrowerSupportPayment
        //public virtual DbSet<City> Cities { get; set; } // City
        //public virtual DbSet<CollateralAssetType> CollateralAssetTypes { get; set; } // CollateralAssetType
        //public virtual DbSet<Config> Configs { get; set; } // Config
        //public virtual DbSet<ConfigSelection> ConfigSelections { get; set; } // ConfigSelection
        //public virtual DbSet<ConfigSelectionItem> ConfigSelectionItems { get; set; } // ConfigSelectionItem
        //public virtual DbSet<ConsentType> ConsentTypes { get; set; } // ConsentType
        //public virtual DbSet<Country> Countries { get; set; } // Country
        //public virtual DbSet<County> Counties { get; set; } // County
        //public virtual DbSet<CountyType> CountyTypes { get; set; } // CountyType
        //public virtual DbSet<Entity> Entities { get; set; } // Entity
        //public virtual DbSet<EntityType> EntityTypes { get; set; } // EntityType
        //public virtual DbSet<EscrowEntityType> EscrowEntityTypes { get; set; } // EscrowEntityType
        //public virtual DbSet<Ethnicity> Ethnicities { get; set; } // Ethnicity
        //public virtual DbSet<EthnicityDetail> EthnicityDetails { get; set; } // EthnicityDetail
        //public virtual DbSet<FamilyRelationType> FamilyRelationTypes { get; set; } // FamilyRelationType
        //public virtual DbSet<Gender> Genders { get; set; } // Gender
        //public virtual DbSet<GiftSource> GiftSources { get; set; } // GiftSource
        //public virtual DbSet<InActiveSetupItem> InActiveSetupItems { get; set; } // InActiveSetupItems
        //public virtual DbSet<InActiveSetupItemSection> InActiveSetupItemSections { get; set; } // InActiveSetupItemSection
        //public virtual DbSet<InActiveSetupItemsSectionWise> InActiveSetupItemsSectionWises { get; set; } // InActiveSetupItemsSectionWise
        //public virtual DbSet<IncomeCategory> IncomeCategories { get; set; } // IncomeCategory
        //public virtual DbSet<IncomeGroup> IncomeGroups { get; set; } // IncomeGroup
        //public virtual DbSet<IncomeInfo> IncomeInfoes { get; set; } // IncomeInfo
        //public virtual DbSet<IncomeType> IncomeTypes { get; set; } // IncomeType
        //public virtual DbSet<JobType> JobTypes { get; set; } // JobType
        //public virtual DbSet<LiabilityType> LiabilityTypes { get; set; } // LiabilityType
        //public virtual DbSet<LoanApplication> LoanApplications { get; set; } // LoanApplication
        //public virtual DbSet<LoanContact> LoanContacts { get; set; } // LoanContact
        //public virtual DbSet<LoanContactEncryption> LoanContactEncryptions { get; set; } // LoanContactEncryption
        //public virtual DbSet<LoanContactEthnicityBinder> LoanContactEthnicityBinders { get; set; } // LoanContactEthnicityBinder
        //public virtual DbSet<LoanContactRaceBinder> LoanContactRaceBinders { get; set; } // LoanContactRaceBinder
        //public virtual DbSet<LoanGoal> LoanGoals { get; set; } // LoanGoal
        //public virtual DbSet<LoanPurpose> LoanPurposes { get; set; } // LoanPurpose
        //public virtual DbSet<LoanPurposeProgram> LoanPurposePrograms { get; set; } // LoanPurposeProgram
        //public virtual DbSet<LoanType> LoanTypes { get; set; } // LoanType
        //public virtual DbSet<MaritalStatusList> MaritalStatusLists { get; set; } // MaritalStatusList
        //public virtual DbSet<MaritalStatusType> MaritalStatusTypes { get; set; } // MaritalStatusType
        //public virtual DbSet<MilitaryAffiliation> MilitaryAffiliations { get; set; } // MilitaryAffiliation
        //public virtual DbSet<MilitaryBranch> MilitaryBranches { get; set; } // MilitaryBranch
        //public virtual DbSet<MilitaryStatusList> MilitaryStatusLists { get; set; } // MilitaryStatusList
        //public virtual DbSet<MortgageOnProperty> MortgageOnProperties { get; set; } // MortgageOnProperty
        //public virtual DbSet<MortgageType> MortgageTypes { get; set; } // MortgageType
        //public virtual DbSet<OtherIncomeInfo> OtherIncomeInfoes { get; set; } // OtherIncomeInfo
        //public virtual DbSet<OtherIncomeType> OtherIncomeTypes { get; set; } // OtherIncomeType
        //public virtual DbSet<OwnerShipInterest> OwnerShipInterests { get; set; } // OwnerShipInterest
        //public virtual DbSet<OwnershipType> OwnershipTypes { get; set; } // OwnershipType
        //public virtual DbSet<OwnType> OwnTypes { get; set; } // OwnType
        //public virtual DbSet<PaidBy> PaidBies { get; set; } // PaidBy
        //public virtual DbSet<ProductAmortizationType> ProductAmortizationTypes { get; set; } // ProductAmortizationType
        //public virtual DbSet<ProductFamily> ProductFamilies { get; set; } // ProductFamily
        //public virtual DbSet<ProjectType> ProjectTypes { get; set; } // ProjectType
        //public virtual DbSet<PropertyInfo> PropertyInfoes { get; set; } // PropertyInfo
        //public virtual DbSet<PropertyTax> PropertyTaxes { get; set; } // PropertyTax
        //public virtual DbSet<PropertyTaxEscrow> PropertyTaxEscrows { get; set; } // PropertyTaxEscrow
        //public virtual DbSet<PropertyType> PropertyTypes { get; set; } // PropertyType
        //public virtual DbSet<PropertyUsage> PropertyUsages { get; set; } // PropertyUsage
        //public virtual DbSet<Question> Questions { get; set; } // Question
        //public virtual DbSet<QuestionBorrowerDisplayOption> QuestionBorrowerDisplayOptions { get; set; } // QuestionBorrowerDisplayOption
        //public virtual DbSet<QuestionSection> QuestionSections { get; set; } // QuestionSection
        //public virtual DbSet<QuestionType> QuestionTypes { get; set; } // QuestionType
        //public virtual DbSet<Race> Races { get; set; } // Race
        //public virtual DbSet<RaceDetail> RaceDetails { get; set; } // RaceDetail
        //public virtual DbSet<ResidencyState> ResidencyStates { get; set; } // ResidencyState
        //public virtual DbSet<ResidencyType> ResidencyTypes { get; set; } // ResidencyType
        //public virtual DbSet<RmOtherIncomeTypeMapping> RmOtherIncomeTypeMappings { get; set; } // _RmOtherIncomeTypeMapping
        //public virtual DbSet<SetupItemsTenantName> SetupItemsTenantNames { get; set; } // SetupItemsTenantName
        //public virtual DbSet<State> States { get; set; } // State
        //public virtual DbSet<StateCountyCity> StateCountyCities { get; set; } // StateCountyCity
        //public virtual DbSet<TenantQuestionOverride> TenantQuestionOverrides { get; set; } // TenantQuestionOverride
        //public virtual DbSet<TitleEstate> TitleEstates { get; set; } // TitleEstate
        //public virtual DbSet<TitleHeldWith> TitleHeldWiths { get; set; } // TitleHeldWith
        //public virtual DbSet<TitleLandTenure> TitleLandTenures { get; set; } // TitleLandTenure
        //public virtual DbSet<TitleManner> TitleManners { get; set; } // TitleManner
        //public virtual DbSet<TitleTrustInfo> TitleTrustInfoes { get; set; } // TitleTrustInfo
        //public virtual DbSet<VaDetail> VaDetails { get; set; } // VaDetails
        //public virtual DbSet<VaOccupancy> VaOccupancies { get; set; } // VaOccupancy
        //public virtual DbSet<ZipCode> ZipCodes { get; set; } // ZipCode

		public LoanApplicationContext(DbContextOptions<LoanApplicationContext> options)
            : base(options)
        {
		            InitializePartial();
        }
		
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.ApplyConfiguration(new AddressInfoMap());
            modelBuilder.ApplyConfiguration(new AssetBorrowerBinderMap());
            modelBuilder.ApplyConfiguration(new AssetCategoryMap());
            modelBuilder.ApplyConfiguration(new AssetTypeMap());
            modelBuilder.ApplyConfiguration(new AssetTypeGiftSourceBinderMap());
            modelBuilder.ApplyConfiguration(new BankRuptcyMap());
            modelBuilder.ApplyConfiguration(new BorrowerMap());
            modelBuilder.ApplyConfiguration(new BorrowerAssetMap());
            modelBuilder.ApplyConfiguration(new BorrowerBankRuptcyMap());
            modelBuilder.ApplyConfiguration(new BorrowerConsentMap());
            modelBuilder.ApplyConfiguration(new BorrowerLiabilityMap());
            modelBuilder.ApplyConfiguration(new BorrowerPropertyMap());
            modelBuilder.ApplyConfiguration(new BorrowerQuestionResponseMap());
            modelBuilder.ApplyConfiguration(new BorrowerResidenceMap());
            modelBuilder.ApplyConfiguration(new BorrowerSupportPaymentMap());
            modelBuilder.ApplyConfiguration(new CityMap());
            modelBuilder.ApplyConfiguration(new CollateralAssetTypeMap());
            modelBuilder.ApplyConfiguration(new ConfigMap());
            modelBuilder.ApplyConfiguration(new ConfigSelectionMap());
            modelBuilder.ApplyConfiguration(new ConfigSelectionItemMap());
            modelBuilder.ApplyConfiguration(new ConsentTypeMap());
            modelBuilder.ApplyConfiguration(new CountryMap());
            modelBuilder.ApplyConfiguration(new CountyMap());
            modelBuilder.ApplyConfiguration(new CountyTypeMap());
            modelBuilder.ApplyConfiguration(new EntityMap());
            modelBuilder.ApplyConfiguration(new EntityTypeMap());
            modelBuilder.ApplyConfiguration(new EscrowEntityTypeMap());
            modelBuilder.ApplyConfiguration(new EthnicityMap());
            modelBuilder.ApplyConfiguration(new EthnicityDetailMap());
            modelBuilder.ApplyConfiguration(new FamilyRelationTypeMap());
            modelBuilder.ApplyConfiguration(new GenderMap());
            modelBuilder.ApplyConfiguration(new GiftSourceMap());
            modelBuilder.ApplyConfiguration(new InActiveSetupItemMap());
            modelBuilder.ApplyConfiguration(new InActiveSetupItemSectionMap());
            modelBuilder.ApplyConfiguration(new InActiveSetupItemsSectionWiseMap());
            modelBuilder.ApplyConfiguration(new IncomeCategoryMap());
            modelBuilder.ApplyConfiguration(new IncomeGroupMap());
            modelBuilder.ApplyConfiguration(new IncomeInfoMap());
            modelBuilder.ApplyConfiguration(new IncomeTypeMap());
            modelBuilder.ApplyConfiguration(new JobTypeMap());
            modelBuilder.ApplyConfiguration(new LiabilityTypeMap());
            modelBuilder.ApplyConfiguration(new LoanApplicationMap());
            modelBuilder.ApplyConfiguration(new LoanContactMap());
            modelBuilder.ApplyConfiguration(new LoanContactEncryptionMap());
            modelBuilder.ApplyConfiguration(new LoanContactEthnicityBinderMap());
            modelBuilder.ApplyConfiguration(new LoanContactRaceBinderMap());
            modelBuilder.ApplyConfiguration(new LoanGoalMap());
            modelBuilder.ApplyConfiguration(new LoanPurposeMap());
            modelBuilder.ApplyConfiguration(new LoanPurposeProgramMap());
            modelBuilder.ApplyConfiguration(new LoanTypeMap());
            modelBuilder.ApplyConfiguration(new MaritalStatusListMap());
            modelBuilder.ApplyConfiguration(new MaritalStatusTypeMap());
            modelBuilder.ApplyConfiguration(new MilitaryAffiliationMap());
            modelBuilder.ApplyConfiguration(new MilitaryBranchMap());
            modelBuilder.ApplyConfiguration(new MilitaryStatusListMap());
            modelBuilder.ApplyConfiguration(new MortgageOnPropertyMap());
            modelBuilder.ApplyConfiguration(new MortgageTypeMap());
            modelBuilder.ApplyConfiguration(new OtherIncomeInfoMap());
            modelBuilder.ApplyConfiguration(new OtherIncomeTypeMap());
            modelBuilder.ApplyConfiguration(new OwnerShipInterestMap());
            modelBuilder.ApplyConfiguration(new OwnershipTypeMap());
            modelBuilder.ApplyConfiguration(new OwnTypeMap());
            modelBuilder.ApplyConfiguration(new PaidByMap());
            modelBuilder.ApplyConfiguration(new ProductAmortizationTypeMap());
            modelBuilder.ApplyConfiguration(new ProductFamilyMap());
            modelBuilder.ApplyConfiguration(new ProjectTypeMap());
            modelBuilder.ApplyConfiguration(new PropertyInfoMap());
            modelBuilder.ApplyConfiguration(new PropertyTaxMap());
            modelBuilder.ApplyConfiguration(new PropertyTaxEscrowMap());
            modelBuilder.ApplyConfiguration(new PropertyTypeMap());
            modelBuilder.ApplyConfiguration(new PropertyUsageMap());
            modelBuilder.ApplyConfiguration(new QuestionMap());
            modelBuilder.ApplyConfiguration(new QuestionBorrowerDisplayOptionMap());
            modelBuilder.ApplyConfiguration(new QuestionSectionMap());
            modelBuilder.ApplyConfiguration(new QuestionTypeMap());
            modelBuilder.ApplyConfiguration(new RaceMap());
            modelBuilder.ApplyConfiguration(new RaceDetailMap());
            modelBuilder.ApplyConfiguration(new ResidencyStateMap());
            modelBuilder.ApplyConfiguration(new ResidencyTypeMap());
            modelBuilder.ApplyConfiguration(new RmOtherIncomeTypeMappingMap());
            modelBuilder.ApplyConfiguration(new SetupItemsTenantNameMap());
            modelBuilder.ApplyConfiguration(new StateMap());
            modelBuilder.ApplyConfiguration(new StateCountyCityMap());
            modelBuilder.ApplyConfiguration(new TenantQuestionOverrideMap());
            modelBuilder.ApplyConfiguration(new TitleEstateMap());
            modelBuilder.ApplyConfiguration(new TitleHeldWithMap());
            modelBuilder.ApplyConfiguration(new TitleLandTenureMap());
            modelBuilder.ApplyConfiguration(new TitleMannerMap());
            modelBuilder.ApplyConfiguration(new TitleTrustInfoMap());
            modelBuilder.ApplyConfiguration(new VaDetailMap());
            modelBuilder.ApplyConfiguration(new VaOccupancyMap());
            modelBuilder.ApplyConfiguration(new ZipCodeMap());

            OnModelCreatingPartial(modelBuilder);
        }


        partial void InitializePartial();
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
// </auto-generated>
