// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Notification.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using Notification.Entity.Models;

    // NotificationRecipientMediumStatusList

    public partial class NotificationRecipientMediumStatusListMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<NotificationRecipientMediumStatusList>
    {
        public void Configure(EntityTypeBuilder<NotificationRecipientMediumStatusList> builder)
        {
            builder.ToTable("NotificationRecipientMediumStatusList", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime2").IsRequired();
            builder.Property(x => x.NotificationRecepientMediumId).HasColumnName(@"NotificationRecepientMediumId").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.StatusId).HasColumnName(@"StatusId").HasColumnType("tinyint").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.NotificationRecepientMedium).WithMany(b => b.NotificationRecipientMediumStatusLists).HasForeignKey(c => c.NotificationRecepientMediumId).OnDelete(DeleteBehavior.SetNull); // FK_NotificationRecipientMediumStatusList_NotificationRecepientMedium
            builder.HasOne(a => a.StatusListEnum).WithMany(b => b.NotificationRecipientMediumStatusLists).HasForeignKey(c => c.StatusId).OnDelete(DeleteBehavior.SetNull); // FK_NotificationRecipientMediumStatusList_StatusListEnum
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
