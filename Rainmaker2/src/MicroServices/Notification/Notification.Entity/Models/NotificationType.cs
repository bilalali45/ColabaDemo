// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Notification.Entity.Models
{
    using System;
    using System.Collections.Generic;

    // NotificationType
    
    public partial class NotificationType : URF.Core.EF.Trackable.Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child NotificationObjects where [NotificationObject].[NotificationTypeId] point to this entity (FK_NotificationObject_NotificationType_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NotificationObject> NotificationObjects { get; set; } // NotificationObject.FK_NotificationObject_NotificationType_Id
        /// <summary>
        /// Child NotificationTemplates where [NotificationTemplate].[NotificationTypeId] point to this entity (FK_NotificationTemplate_NotificationType_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NotificationTemplate> NotificationTemplates { get; set; } // NotificationTemplate.FK_NotificationTemplate_NotificationType_Id
        /// <summary>
        /// Child TenantDeliveryModes where [TenantDeliveryMode].[NotificationTypeId] point to this entity (FK_TenantDeliveryMode_NotificationType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TenantDeliveryMode> TenantDeliveryModes { get; set; } // TenantDeliveryMode.FK_TenantDeliveryMode_NotificationType
        /// <summary>
        /// Child TenantNotificationMediums where [TenantNotificationMedium].[NotificationTypeId] point to this entity (FK_TenantNotificationMedium_NotificationType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TenantNotificationMedium> TenantNotificationMediums { get; set; } // TenantNotificationMedium.FK_TenantNotificationMedium_NotificationType
        /// <summary>
        /// Child UserNotificationMediums where [UserNotificationMedium].[NotificationTypeId] point to this entity (FK_UserNotificationMedium_NotificationType_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UserNotificationMedium> UserNotificationMediums { get; set; } // UserNotificationMedium.FK_UserNotificationMedium_NotificationType_Id

        public NotificationType()
        {
            NotificationObjects = new System.Collections.Generic.HashSet<NotificationObject>();
            NotificationTemplates = new System.Collections.Generic.HashSet<NotificationTemplate>();
            TenantDeliveryModes = new System.Collections.Generic.HashSet<TenantDeliveryMode>();
            TenantNotificationMediums = new System.Collections.Generic.HashSet<TenantNotificationMedium>();
            UserNotificationMediums = new System.Collections.Generic.HashSet<UserNotificationMedium>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
