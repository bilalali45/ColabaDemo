//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2020-09-11 2:04:15 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using ByteWebConnector.Entity.Models;



namespace ByteWebConnector.Data.Mapping
{
    /// <summary>
    /// There are no comments for SettingConfiguration in the schema.
    /// </summary>
    public partial class SettingConfiguration : IEntityTypeConfiguration<Setting>
    {
        /// <summary>
        /// There are no comments for Configure(EntityTypeBuilder<Setting> builder) method in the schema.
        /// </summary>
        public void Configure(EntityTypeBuilder<Setting> builder)
        {
            builder.ToTable(@"Setting", @"dbo");
            builder.Property<int>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd();
            builder.Property<string>(x => x.Name).HasColumnName(@"Name").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            builder.Property<string>(x => x.Value).HasColumnName(@"Value").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            builder.Property<string>(x => x.Tag).HasColumnName(@"Tag").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            builder.Property<int>(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            builder.HasKey(@"Id");

            CustomizeConfiguration(builder);
        }

        #region Partial Methods

        partial void CustomizeConfiguration(EntityTypeBuilder<Setting> builder);

        #endregion
    }

}
