// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Setting.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using Setting.Entity.Models;

    // EmailTemplate
    
    public partial class EmailTemplateMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<EmailTemplate>
    {
        public void Configure(EntityTypeBuilder<EmailTemplate> builder)
        {
            builder.ToTable("EmailTemplate", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.TemplateTypeId).HasColumnName(@"TemplateTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired();
            builder.Property(x => x.TemplateName).HasColumnName(@"TemplateName").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            builder.Property(x => x.TemplateDescription).HasColumnName(@"TemplateDescription").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.FromAddress).HasColumnName(@"FromAddress").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            builder.Property(x => x.ToAddress).HasColumnName(@"ToAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.CcAddress).HasColumnName(@"CCAddress").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            builder.Property(x => x.EmailBody).HasColumnName(@"EmailBody").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.SortOrder).HasColumnName(@"SortOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOn).HasColumnName(@"ModifiedOn").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.TemplateType).WithMany(b => b.EmailTemplates).HasForeignKey(c => c.TemplateTypeId).OnDelete(DeleteBehavior.SetNull); // FK_EmailTemplate_EmailTemplate
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
