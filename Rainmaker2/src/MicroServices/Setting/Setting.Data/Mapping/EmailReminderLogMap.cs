// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Setting.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using Setting.Entity.Models;

    // EmailReminderLogs
    
    public partial class EmailReminderLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<EmailReminderLog>
    {
        public void Configure(EntityTypeBuilder<EmailReminderLog> builder)
        {
            builder.ToTable("EmailReminderLogs", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired();
            builder.Property(x => x.JobTypeId).HasColumnName(@"JobTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RequestDate).HasColumnName(@"RequestDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.LoanApplicationId).HasColumnName(@"LoanApplicationId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RecurringDate).HasColumnName(@"RecurringDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ReminderId).HasColumnName(@"ReminderId").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.LoanStatusId).HasColumnName(@"LoanStatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.IsEmailSent).HasColumnName(@"IsEmailSent").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Response).HasColumnName(@"Response").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.JobType).WithMany(b => b.EmailReminderLogs).HasForeignKey(c => c.JobTypeId).OnDelete(DeleteBehavior.SetNull); // FK_EmailReminderLogs_JobType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
