// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Identity.Data
{
    using Identity.Data.Mapping;
    using Identity.Entity.Models;
    using Microsoft.EntityFrameworkCore;


    
    public partial class IdentityContext : DbContext
    {
        //public virtual DbSet<ContactLog> ContactLogs { get; set; } // ContactLog
        //public virtual DbSet<MSreplicationOption> MSreplicationOptions { get; set; } // MSreplication_options
        //public virtual DbSet<OtpTracing> OtpTracings { get; set; } // OtpTracing
        //public virtual DbSet<PasswordPolicy> PasswordPolicies { get; set; } // PasswordPolicy
        //public virtual DbSet<Permission> Permissions { get; set; } // Permission
        //public virtual DbSet<Role> Roles { get; set; } // Role
        //public virtual DbSet<RolePermissionBinder> RolePermissionBinders { get; set; } // RolePermissionBinder
        //public virtual DbSet<SptFallbackDb> SptFallbackDbs { get; set; } // spt_fallback_db
        //public virtual DbSet<SptFallbackDev> SptFallbackDevs { get; set; } // spt_fallback_dev
        //public virtual DbSet<SptFallbackUsg> SptFallbackUsgs { get; set; } // spt_fallback_usg
        //public virtual DbSet<SptMonitor> SptMonitors { get; set; } // spt_monitor
        //public virtual DbSet<SptValue> SptValues { get; set; } // spt_values
        //public virtual DbSet<User> Users { get; set; } // User
        //public virtual DbSet<UserPermissionBinder> UserPermissionBinders { get; set; } // UserPermissionBinder
        //public virtual DbSet<UserResetPasswordKey> UserResetPasswordKeys { get; set; } // UserResetPasswordKey
        //public virtual DbSet<UserResetPasswordLog> UserResetPasswordLogs { get; set; } // UserResetPasswordLog
        //public virtual DbSet<UserRoleBinder> UserRoleBinders { get; set; } // UserRoleBinder
        //public virtual DbSet<UserType> UserTypes { get; set; } // UserTypes

		public IdentityContext(DbContextOptions<IdentityContext> options)
            : base(options)
        {
		            InitializePartial();
        }
		
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.ApplyConfiguration(new ContactLogMap());
            modelBuilder.ApplyConfiguration(new MSreplicationOptionMap());
            modelBuilder.ApplyConfiguration(new OtpTracingMap());
            modelBuilder.ApplyConfiguration(new PasswordPolicyMap());
            modelBuilder.ApplyConfiguration(new PermissionMap());
            modelBuilder.ApplyConfiguration(new RoleMap());
            modelBuilder.ApplyConfiguration(new RolePermissionBinderMap());
            modelBuilder.ApplyConfiguration(new SptFallbackDbMap());
            modelBuilder.ApplyConfiguration(new SptFallbackDevMap());
            modelBuilder.ApplyConfiguration(new SptFallbackUsgMap());
            modelBuilder.ApplyConfiguration(new SptMonitorMap());
            modelBuilder.ApplyConfiguration(new SptValueMap());
            modelBuilder.ApplyConfiguration(new UserMap());
            modelBuilder.ApplyConfiguration(new UserPermissionBinderMap());
            modelBuilder.ApplyConfiguration(new UserResetPasswordKeyMap());
            modelBuilder.ApplyConfiguration(new UserResetPasswordLogMap());
            modelBuilder.ApplyConfiguration(new UserRoleBinderMap());
            modelBuilder.ApplyConfiguration(new UserTypeMap());

            OnModelCreatingPartial(modelBuilder);
        }


        partial void InitializePartial();
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
// </auto-generated>
