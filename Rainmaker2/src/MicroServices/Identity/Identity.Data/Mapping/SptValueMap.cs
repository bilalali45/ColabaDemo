// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Identity.Data.Mapping
{
    using Identity.Entity.Models;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;

    // spt_values
    
    public partial class SptValueMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<SptValue>
    {
        public void Configure(EntityTypeBuilder<SptValue> builder)
        {
            builder.ToTable("spt_values", "dbo");
            builder.HasKey(x => new { x.Number, x.Type });

            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(35);
            builder.Property(x => x.Number).HasColumnName(@"number").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Type).HasColumnName(@"type").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(3).ValueGeneratedNever();
            builder.Property(x => x.Low).HasColumnName(@"low").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.High).HasColumnName(@"high").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"status").HasColumnType("int").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
