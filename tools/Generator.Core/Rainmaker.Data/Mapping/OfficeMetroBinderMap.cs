// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // OfficeMetroBinder
    
    public partial class OfficeMetroBinderMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<OfficeMetroBinder>
    {
        public void Configure(EntityTypeBuilder<OfficeMetroBinder> builder)
        {
            builder.ToTable("OfficeMetroBinder", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CountyId).HasColumnName(@"CountyId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CityId).HasColumnName(@"CityId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RegionCode).HasColumnName(@"RegionCode").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.MetroCode).HasColumnName(@"MetroCode").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(3);
            builder.Property(x => x.BranchId).HasColumnName(@"BranchId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystem).HasColumnName(@"IsSystem").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.TpId).HasColumnName(@"TpId").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Branch).WithMany(b => b.OfficeMetroBinders).HasForeignKey(c => c.BranchId).OnDelete(DeleteBehavior.SetNull); // FK_OfficeMetroBinder_Branch
            builder.HasOne(a => a.City).WithMany(b => b.OfficeMetroBinders).HasForeignKey(c => c.CityId).OnDelete(DeleteBehavior.SetNull); // FK_OfficeMetroBinder_City
            builder.HasOne(a => a.County).WithMany(b => b.OfficeMetroBinders).HasForeignKey(c => c.CountyId).OnDelete(DeleteBehavior.SetNull); // FK_OfficeMetroBinder_County
            builder.HasOne(a => a.State).WithMany(b => b.OfficeMetroBinders).HasForeignKey(c => c.StateId).OnDelete(DeleteBehavior.SetNull); // FK_OfficeMetroBinder_State
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
