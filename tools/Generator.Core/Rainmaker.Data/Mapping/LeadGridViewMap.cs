// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // LeadGridView
    
    public partial class LeadGridViewMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<LeadGridView>
    {
        public void Configure(EntityTypeBuilder<LeadGridView> builder)
        {
            builder.ToTable("LeadGridView", "dbo");
            builder.HasKey(x => new { x.Id, x.IsPickedByOwner, x.IsAutoAssigned });

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.AssignedOnUtc).HasColumnName(@"AssignedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsPickedByOwner).HasColumnName(@"IsPickedByOwner").HasColumnType("bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.PickedOnUtc).HasColumnName(@"PickedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OwnerId).HasColumnName(@"OwnerId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsAutoAssigned).HasColumnName(@"IsAutoAssigned").HasColumnType("bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.LeadSourceId).HasColumnName(@"LeadSourceId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BusinessUnitId).HasColumnName(@"BusinessUnitId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StatusId).HasColumnName(@"StatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadCreatedFromId).HasColumnName(@"LeadCreatedFromId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Purpose).HasColumnName(@"Purpose").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.LoanAmount).HasColumnName(@"LoanAmount").HasColumnType("decimal(18,0)").IsRequired(false);
            builder.Property(x => x.VisitorId).HasColumnName(@"VisitorId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SearchDateUtc).HasColumnName(@"SearchDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.PropertyState).HasColumnName(@"PropertyState").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.BusinessUnit).HasColumnName(@"BusinessUnit").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.LeadSource).HasColumnName(@"LeadSource").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.OrgLeadSource).HasColumnName(@"OrgLeadSource").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.OpportunityStatus).HasColumnName(@"OpportunityStatus").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CategoryId).HasColumnName(@"CategoryId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TypeId).HasColumnName(@"TypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EmployeeName).HasColumnName(@"EmployeeName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ContactName).HasColumnName(@"ContactName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Duplicate).HasColumnName(@"Duplicate").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AllEmail).HasColumnName(@"AllEmail").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AllPhone).HasColumnName(@"AllPhone").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Names).HasColumnName(@"Names").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.XmlNames).HasColumnName(@"XmlNames").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TpId).HasColumnName(@"TpId").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.LeadSourceOriginalId).HasColumnName(@"LeadSourceOriginalId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadCreatedOnUtc).HasColumnName(@"LeadCreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EstimatedClosingDate).HasColumnName(@"EstimatedClosingDate").HasColumnType("datetime").IsRequired(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
