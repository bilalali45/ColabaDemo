// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // ThirdPartyLead
    
    public partial class ThirdPartyLeadMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<ThirdPartyLead>
    {
        public void Configure(EntityTypeBuilder<ThirdPartyLead> builder)
        {
            builder.ToTable("ThirdPartyLead", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.OpportunityId).HasColumnName(@"OpportunityId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LoanRequestId).HasColumnName(@"LoanRequestId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrackingNo).HasColumnName(@"TrackingNo").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Message).HasColumnName(@"Message").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LeadSourceId).HasColumnName(@"LeadSourceId").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LeadFileName).HasColumnName(@"LeadFileName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(256);
            builder.Property(x => x.AckFileName).HasColumnName(@"AckFileName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(256);
            builder.Property(x => x.MarksmanFileName).HasColumnName(@"MarksmanFileName").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(256);
            builder.Property(x => x.StatusId).HasColumnName(@"StatusId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadCost).HasColumnName(@"LeadCost").HasColumnType("decimal(18,2)").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.LeadSource).WithMany(b => b.ThirdPartyLeads).HasForeignKey(c => c.LeadSourceId).OnDelete(DeleteBehavior.SetNull); // FK_ThirdPartyLead_LeadSource
            builder.HasOne(a => a.LoanRequest).WithMany(b => b.ThirdPartyLeads).HasForeignKey(c => c.LoanRequestId).OnDelete(DeleteBehavior.SetNull); // FK_ThirdPartyLead_LoanRequest
            builder.HasOne(a => a.Opportunity).WithMany(b => b.ThirdPartyLeads).HasForeignKey(c => c.OpportunityId).OnDelete(DeleteBehavior.SetNull); // FK_ThirdPartyLead_Opportunity
            builder.HasOne(a => a.ThirdPartyStatusList).WithMany(b => b.ThirdPartyLeads).HasForeignKey(c => c.StatusId).OnDelete(DeleteBehavior.SetNull); // FK_ThirdPartyLead_ThirdPartyStatusList
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
