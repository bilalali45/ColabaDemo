// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // SMSLog
    
    public partial class Vortex_SmsLogMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Vortex_SmsLog>
    {
        public void Configure(EntityTypeBuilder<Vortex_SmsLog> builder)
        {
            builder.ToTable("SMSLog", "Vortex");
            builder.HasKey(x => x.Sid);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Sid).HasColumnName(@"Sid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.AccountSid).HasColumnName(@"AccountSid").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.DateCreatedUtc).HasColumnName(@"DateCreatedUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.DateUpdatedUtc).HasColumnName(@"DateUpdatedUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.DateSentUtc).HasColumnName(@"DateSentUtc").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.Direction).HasColumnName(@"Direction").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.ErrorCode).HasColumnName(@"ErrorCode").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType("varchar(max)").IsRequired(false).IsUnicode(false);
            builder.Property(x => x.From).HasColumnName(@"From").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.MessagingServiceSid).HasColumnName(@"MessagingServiceSid").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.NumMedia).HasColumnName(@"NumMedia").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.NumSegments).HasColumnName(@"NumSegments").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.PriceUnit).HasColumnName(@"PriceUnit").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.To).HasColumnName(@"To").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.Uri).HasColumnName(@"Uri").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(200);
            builder.Property(x => x.Body).HasColumnName(@"Body").HasColumnType("varchar(max)").IsRequired(false).IsUnicode(false);
            builder.Property(x => x.ApiVersion).HasColumnName(@"ApiVersion").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
