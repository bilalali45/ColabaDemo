// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // LeadGenQuestionTree
    
    public partial class LeadGenQuestionTreeMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<LeadGenQuestionTree>
    {
        public void Configure(EntityTypeBuilder<LeadGenQuestionTree> builder)
        {
            builder.ToTable("LeadGenQuestionTree", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.QuestionText).HasColumnName(@"QuestionText").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
            builder.Property(x => x.QuestionDesc).HasColumnName(@"QuestionDesc").HasColumnType("varchar(max)").IsRequired(false).IsUnicode(false);
            builder.Property(x => x.AnswerType).HasColumnName(@"AnswerType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.AnswerTitle).HasColumnName(@"AnswerTitle").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.AnswerValidationExpression).HasColumnName(@"AnswerValidationExpression").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(1000);
            builder.Property(x => x.ParentQuestionId).HasColumnName(@"ParentQuestionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NextQuestionId).HasColumnName(@"NextQuestionId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ViewName).HasColumnName(@"ViewName").HasColumnType("varchar").IsRequired(false).IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.QuestionGroupId).HasColumnName(@"QuestionGroupId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Order).HasColumnName(@"Order").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.LeadGenQuestionGroup).WithMany(b => b.LeadGenQuestionTrees).HasForeignKey(c => c.QuestionGroupId).OnDelete(DeleteBehavior.SetNull); // FK_LeadGenQuestionTree_LeadGenQuestionGroups
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
