// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // VortexConfiguration
    
    public partial class VortexConfigurationMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<VortexConfiguration>
    {
        public void Configure(EntityTypeBuilder<VortexConfiguration> builder)
        {
            builder.ToTable("VortexConfiguration", "dbo");
            builder.HasKey(x => new { x.Id, x.UserName, x.IsActive, x.IsDeleted, x.WebHook });

            builder.Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256).ValueGeneratedNever();
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Type).HasColumnName(@"Type").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ServiceSettingId).HasColumnName(@"ServiceSettingId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.WebHook).HasColumnName(@"WebHook").HasColumnType("nvarchar").IsRequired().HasMaxLength(253).ValueGeneratedNever();
            builder.Property(x => x.AppSid).HasColumnName(@"AppSid").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CallbackDomain).HasColumnName(@"CallbackDomain").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(253);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
