// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace RainMaker.Data.Mapping
{
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using RainMaker.Entity.Models;

    // Campaign
    
    public partial class CampaignMap : Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<Campaign>
    {
        public void Configure(EntityTypeBuilder<Campaign> builder)
        {
            builder.ToTable("Campaign", "dbo");
            builder.HasKey(x => x.Id);

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            builder.Property(x => x.StartDateUtc).HasColumnName(@"StartDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndDateUtc).HasColumnName(@"EndDateUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.SchedulerId).HasColumnName(@"SchedulerId").HasColumnType("int").IsRequired();
            builder.Property(x => x.RuleId).HasColumnName(@"RuleId").HasColumnType("int").IsRequired();
            builder.Property(x => x.LastRunOnUtc).HasColumnName(@"LastRunOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NextRunOnUtc).HasColumnName(@"NextRunOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NextRunOffset).HasColumnName(@"NextRunOffset").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DependOnTypeId).HasColumnName(@"DependOnTypeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DependOnId).HasColumnName(@"DependOnId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OffsetFromMinute).HasColumnName(@"OffsetFromMinute").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OffsetToMinute).HasColumnName(@"OffsetToMinute").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.EntityTypeId).HasColumnName(@"EntityTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsSystem).HasColumnName(@"IsSystem").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedOnUtc).HasColumnName(@"ModifiedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedOnUtc).HasColumnName(@"CreatedOnUtc").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsTriggerBasedOnly).HasColumnName(@"IsTriggerBasedOnly").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsRecurring).HasColumnName(@"IsRecurring").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Remarks).HasColumnName(@"Remarks").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.Utm).HasColumnName(@"Utm").HasColumnType("nvarchar").IsRequired(false).HasMaxLength(500);

            // Foreign keys
            builder.HasOne(a => a.Rule).WithMany(b => b.Campaigns).HasForeignKey(c => c.RuleId).OnDelete(DeleteBehavior.SetNull); // FK_Campaign_Rule
            builder.HasOne(a => a.Scheduler).WithMany(b => b.Campaigns).HasForeignKey(c => c.SchedulerId).OnDelete(DeleteBehavior.SetNull); // FK_Campaign_Scheduler
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
